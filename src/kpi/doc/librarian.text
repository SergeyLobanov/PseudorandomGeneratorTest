А еще можно добавить русский текст It is masterpiece of foreign classic literature
1
АСИМЕТРИЧНІ КРИПТОСИСТЕМИ
ТА ПРОТОКОЛИ
КОМП’ЮТЕРНИЙ ПРАКТИКУМ №1
Побудова тестів для перевірки якості випадкових та
псевдовипадкових послідовностей
1. Мета роботи
Вивчення критеріїв згоди і набуття навичок у побудові та застосуванні тестів для
перевірки статистичних властивостей бінарних випадкових і псевдовипадкових
послідовностей, ознайомлення з поняттям М-послідовності.
2. Основні теоретичні відомості
2.1. Критерії згоди та їх основні характеристики
Статистичною гіпотезою називається будь-яке твердження про вид чи
властивості розподілу випадкових величин, що спостерігаються в експерименті. Звичайно
її називають основною чи нульовою гіпотезою і позначають символом
H0
. Якщо
формулюється тільки одна гіпотеза, то правило, згідно з яким перевіряється,
погоджуються наявні статистичні дані з цією гіпотезою, чи вони її спростовують,
називаються критерієм згоди. Якщо гіпотеза
H0
однозначно фіксує розподіл
спостережень, то її називають простою, у противному випадку – складною. Для побудови
критерію шукають статистику
T(x)
(тобто функцію від випадкових результатів
спостережень), що характеризує відхилення емпіричних даних від гіпотетичних значень у
випадку справедливості гіпотези
H0
.
Припустимо, що така статистика і її розподіл при гіпотезі
H0
знайдені. Нехай
 –
множина, якій належать можливі значення величин, що спостерігаються в експерименті, і
 t :t  T(x), x – множина усіх можливих значень статистики Т; визначимо для
фіксованого заздалегідь достатнього малого числа
  0
підмножину
1  
так, щоб
імовірність здійснення події
T(X)1
у випадку справедливості гіпотези
H0
задовольняла умові
PT(X)1 H0 .
Правило перевірки гіпотези
H0
можна сформулювати в такий спосіб. Нехай х –
реалізація випадкової величини Х, що спостерігалася,
t  T(x) – відповідне значення
статистики Т. Якщо виявиться, що
1
t , то в припущенні справедливості гіпотези
H0
відбулася малоймовірна подія і ця гіпотеза повинна бути відкинута як така, що
суперечить статистичним даним. У противному випадку (тобто якщо
1
t
) немає
підстав відмовлятися від прийнятої гіпотези і варто вважати, що спостереження не
суперечать гіпотезі (чи погоджуються з нею).
В описаній методиці статистику
T
називають статистикою критерію, а
підмножину її значень
1 – критичною областю для гіпотези
H0
. Число  називають
рівнем значимості критерію, і його можна вважати імовірністю помилкового відкидання
2
гіпотези
H0
, коли вона вірна. У конкретних задачах її величину вибирають звичайно
рівною 0,1; 0,05; 0,01 і т.д.
Кожен критерій будується для того, щоб визначити, чи мають місце ті чи інші
відхилення від основної гіпотези. Характер таких відхилень може бути різним, тому треба
мати критерії як універсального типу (такі, що „уловлюють”, будь-які відхилення від
основної гіпотези), так і призначені для виявлення відхилень тільки певного типу.
Будь-який розподіл
FX
 F
спостереженої випадкової величини
X
, що може
виявитися правдивим (тобто допустимим в даній ситуації), але такий, що відрізняється від
гіпотетичного (тобто розподілу при основній гіпотезі Н0), називають альтернативним
розподілом чи альтернативою. Сукупність всіх альтернативних розподілів називають
альтернативною гіпотезою і позначають символом Н1.
Нехай, далі, для гіпотези
H0
, що перевіряється, побудований деякий критерій з
рівнем значимості α, заснований на статистиці Т(X), і нехай
1
- відповідна критична
область. Величину
( ) ( ; ) W F W 1 F
, що являє собою імовірність влучення значення
статистики критерію в критичну область, коли істинним розподілом спостережень є
розподіл F, називають функцією потужності критерію при альтернативі F. У термінах
функції W(F) можна сказати, що критерій тим кращий (тим „потужніший”), чим більше
його потужність при альтернативах. Бажаною властивістю критерію є властивість
незміщеності, що означає, що повинна виконуватися умова
1 W(F) , F H .
Важливим показником кожного критерію є трудомісткість практичної реалізації
відповідного алгоритму. На практиці, коли потрібно швидко одержати відповідь, перевага
нерідко віддається критерію, що просто реалізується, навіть якщо він не є оптимальним у
теоретичному розумінні.
2.2. Критерій згоди хі-квадрат Пірсона для перевірки гіпотези про вид
розподілу
Критерій можна використовувати для будь-яких розподілів, у тому числі і
багатовимірних. Щоб скористатися цим критерієм, вибіркові дані попередньо групують,
тобто переходять до частотного представлення вихідних даних. Нехай
( ,..., ) 1 N
v  v v –
вектор частот влучення вибіркових точок у відповідні інтервали групування
,..., ( ... ) Е1 ЕN
v1   vN
 n
і
( ,..., )
(0) (0)
1
(0)
p  p pN
, де
pj P( j H0
), j 1,....,N
(0)
  Е 
. У цьому
випадку розподіл вектора частот v при гіпотезі
H0
буде поліномінальним з параметрами n
і
(0)
p , і гіпотеза
H0
зводиться до гіпотези про те, що імовірності поліноміального
розподілу побудованого вектора частот v мають задані значення
pj
, j 1,....,N
(0)

. Як
статистику, що характеризує відхилення вибіркових даних (тобто частот
j
v
) від
відповідних гіпотетичних значень (у даному випадку від середніх
(0)
0 E(vj H )  np
),
приймають наступну статистику
X X v v np np v np n
N
j
j j
N
j
n

n
  j  j j
  
 1
2 (0)
1
2 2 (0) 2 0
( ) ( ) ( ) ( ) ,
а критичну область задають у виді
1
 t  t
. Точний умовний (при істинності гіпотези
H0
) розподіл
L( )0
2 Xn H
цієї статистики незручний для обчислення (при заданому рівні
значимості) критичної границі

t
, але для великих обсягів вибірок n статистика
2 Xn
має
3
при гіпотезі
H0
простий граничний розподіл, що не залежить від гіпотези (тобто від чисел
(0)
pj
). Справедливе наступне твердження.
Теорема. Якщо
0 pj 1, j 1,...., N
(0)
   , то при
n 
L( ) ( 1)
2
0
2 Xn H   N  ,
де
( 1)
2
 N  – хі-квадрат розподіл зі
N 1
ступенем волі, що затабульований і
апроксимується за допомогою нормального розподілу при великих
N .
На практиці граничний розподіл
( 1)
2
 N  можна використовувати з добрим
наближенням уже при
n  50
і
vj  5
. При виконанні цих умов відповідно до теореми
критичну границю

t
вибирають рівною
2
1,(N1)
, тобто (
1
)-квантилі розподілу
( 1)
2
 N  . Квантилі знаходяться за таблицями розподілу хі-квадрат. При великій кількості
ступенів волі (
N  30
) можна скористатися апроксимуючою формулою
2( 1) 1 1
2
1,(N1)  N  Z   N  , де
Z1 – квантиль стандартного нормального розподілу.
Таким чином, критерій згоди
2

має наступний вид: нехай задані рівень
значимості  та обсяг вибірки n, і значення
( ,..., ) h  h1 hN
вектора частот
( ,..., ) 1 N
v  v v ,
що спостерігалися, задовольняють умовам
n  50,hj  5, j 1,...,N
; тоді якщо значення
статистики
( )
2
t  Xn h
, що спостерігалося, задовольняє нерівності
2
 1 ,(N1)
t  
, то
гіпотезу
H0
відкидають, у противному випадку гіпотеза
H0
не суперечить результатам
експерименту.
2.3. Генератори псевдовипадкових чисел
В рамках даного комп’ютерного практикуму необхідно дослідити наступні дев’ять
генераторів псевдовипадкових чисел та їх модифікацій. Зверніть увагу, що деякі з них є
бітовими, а інші – байтовими.
1) Вбудований генератор псевдовипадкових чисел вашої мови програмування.
Зазвичай (наприклад, в таких мовах, як Pascal та C/C++) для вбудованого датчика
використовується лінійний конгруентний генератор (або генератор Лемера – див. нижче).
Більш молоді мови надають можливість використання складних криптографічних
генераторів (наприклад, мова Java має класи датчиків на основі геш-функції SHA-1).
2) Лінійний конгруентний генератор (генератор Лемера) обчислює послідовність
xn1
 (a  xn  c)modm
для фіксованих значень a, c та m і деякого початкового значення
0
x
. Доведено, що максимальний період такого генератора дорівнює m і досягається він за
виконання таких трьох умов:
– числа m та c повинні бути взаємнопрості;
– число
a 1
повинно ділитись на кожен простий дільник числа m;
– якщо m ділиться на 4, то
a 1
теж повинно ділитись на 4.
Значення
n
x
можуть повертатись безпосередньо або розглядатись як стани, з яких
за допомогою деякого перетворення обчислюються біти (байти) вихідної послідовності.
Пропонується дослідити дві модифікації лінійного конгруентного генератора, LehmerLow
та LehmerHigh, що генерують випадкові байти. Обидві вони обчислюють послідовність
4
невід’ємних 32-бітних чисел
n
x
; значення параметрів дорівнюють
32 m  2 , 2 1
16 a   ,
c 119
, початкове значення
0
x
обирається довільно, але не повинно дорівнювати нулю.
LehmerLow в якості n-того вихідного значення повертає молодші 8 біт числа
n
x ,
LehmerHigh – старші 8 біт
n
x .
3) Генератор псевдовипадкових двійкових послідовностей L20 задається
рекурентною формулою (що описує функціонування лінійного регістра зсуву)
, 20, 21... xt
 xt3  xt5  xt9  xt2 0 t  , де
{0,1} t
x ,  – булеве додавання. Перші 20
елементів послідовності обираються довільним образом, але не всі одночасно рівні нулю.
У даного генератора вихідна послідовність має максимальний можливий період – (2 1)
20

бітів; така послідовність називається М-послідовністю.
4) Генератор псевдовипадкових двійкових послідовностей L89 аналогічний
попередньому генератору за будовою. Він відрізняється визначенням елементів
послідовності за формулою
, 89, 90... xt
 xt38  xt89 t 
, де перші вісімдесят дев'ять
елементів обираються довільним чином, але не всі рівні нулю. Генератор L89 має період
2 1
89
 бітів і також генерує М-послідовність.
5) Генератор Джиффі (Geffe) – потоковий шифр, що генерує шифруючу гаму за
рахунок нелінійної комбінації трьох лінійних регістрів зсуву (властивості даного шифру
досліджувались у комп’ютерному практикумі з дисциплін «Симетрична криптографія» та
«Прикладна криптологія 1»). Шифруюча гама генератора може розглядатись як
псевдовипадкова двійкова послідовність.
Для виконання комп’ютерного практикуму пропонується дослідити генератор
Джиффі, який використовує наступні три лінійні рекурентні послідовності, що
генеруються відповідними лінійними регістрами зсуву:
регістр L11:
11 0 2
x  x  x
;
регістр L9:
9 0 1 3 4
y  y  y  y  y
;
регістр L10:
10 0 3
s  s  s .
Вихідна послідовність бітів
( )i
z
обчислюється за правилом
i i i i i
z  s x (1 s )y .
Початкові заповнення кожного з регістрів генератора Джиффі обираються
довільними, але не нульовими.
6) Генератор Вольфрама – запропонований Еріком Вольфрамом генератор,
пристосований до швидкої апаратної реалізації.
Генератор використовує 32-бітні стани (однак може бути легко перебудований під
будь-яку бітність). Початкове значення
r0  0
обирається довільним чином. Вихідна
послідовність
, , ,... 0 1 2
x x x
обчислюється за таким правилом:
xi
 ri mod 2 ,
( 1) ( ( 1)) ri1
 ri   ri  ri  ,
де операції логічного АБО () та виключного АБО () виконуються окремо над кожним
бітом векторів-операндів, а
i
x
є останнім бітом вектору
i
r .
7) Генератор «Бібліотекар» перетворює у байтову послідовність змістовний текст
довільною мовою (наприклад, випадкові фрагменти творів Мануїла Канта німецькою
5
мовою, що потрясають своєю фундаментальністю, або фанфікі за творами Джоан Кетлін
Роулінг, які у більшості своїй і так є випадковим мотлохом). При реалізації цього
генератору потрібно враховувати, що символи відповідного тексту повинні
представлятись у вигляді байтів (тобто кодування використовує вісім біт на символ).
8) Генератор BM (Блюма-Мікалі) – перший криптографічний генератор,
побудований на основі формальної теорії, яка доводить його властивості. Так, показано,
що можливість вгадувати біти вихідної послідовності цього генератору еквівалентна
можливості розв’язувати задачу дискретного логарифмування.
Нехай p велике просте число, a – примітивний корінь за модулем p (генератор
групи
*
Z p
). Початкове значення стану
T0
, 0  T0  p 1
обирається випадковим чином.
Послідовність станів обчислюється за рекурентним співвідношенням
T a p
Ti
i1
 mod .
Вихідна послідовність бітів
, , ,... 0 1 2
x x x
обчислюється за таким правилом:










2
1
0,
2
1
1,
p
T
p
T
x
i
i
i
.
Байтова модифікація генератору BM в якості вихідного байту
i
x
повертає таке
значення k, що
256
( 1)( 1)
256
( 1)  
 
 k p
T
k p
i
.
Для виконання практикуму пропонується використовувати такі параметри:
p = CEA42B987C44FA642D80AD9F51F10457690DEF10C83D0BC1BCEE12FC3B6093E3;
a = 5B88C41246790891C095E2878880342E88C79974303BD0400B090FE38A688356.
Зауважимо, що для зручності число p обрано у формі
p  2q 1
, де число q також
просте:
q = 675215CC3E227D3216C056CFA8F8822BB486F788641E85E0DE77097E1DB049F1.
9) Генератор BBS (Блюм-Блюма-Шуба) побудовано на ідеях Блюма та Мікалі,
однак для генерування псевдовипадкових бітів він використовує апарат теорії чисел.
Доведено, що можливість вгадувати біти вихідної послідовності цього генератору
еквівалентна можливості розв’язувати задачу факторизації.
Нехай p та q – різні великі прості числа виду
4k  3
і
n  pq
. Початкове значення
r0  2
обирається довільним чином. Вихідна послідовність
, ,... 1 2
x x
обчислюється за таким
правилом:
ri
ri mod n
2
 1
,
xi
 ri mod 2 ,
тобто
i
x
є останнім бітом числа
i
r
(зверніть увагу, що вихідні біти нумеруються з одиниці
– стан
0
r
не використовується для безпосереднього генерування вихідної послідовності).
Байтова модифікація генератору BBS обчислює вихідну послідовність як
xi
 ri mod 256
, тобто повертаються вісім молодших біт числа
i
r .
6
Для виконання практикуму пропонується використовувати такі числа:
p = D5BBB96D30086EC484EBA3D7F9CAEB07;
q = 425D2B9BFDB25B9CF6C416CC6E37B59C1F.
2.4. Критерії і тести для перевірки якості випадкових двійкових
послідовностей
В цьому розділі наведено три критерії, що перевіряють статистичні властивості
псевдовипадкових послідовностей: рівноімовірність знаків, незалежність сусідніх знаків,
однорідність послідовності. Всі ці критерії є критеріями хі-квадрат Пірсона для перевірки
відповідним чином сформульованих гіпотез.
Розглянемо послідовність
Yj, j 1,...,m, де кожна
Yj
є випадковою величиною, що
приймає набір значень із алфавіту А. Всі величини
Yj
мають однаковий розподіл та
розглядаються як вихідні значення деякого генератору.
Послідовність
Yj
задовольняє умові рівноімовірності знаків, якщо кожна
Yj
розподілена рівноімовірно на A. Таким чином, кожне значення із А повинно зустрічатись у
довільній реалізації даної послідовності однакову кількість разів.
Тест на виконання умови рівноімовірності не відрізняється великою чутливістю,
однак він доволі швидкий. В практичних задачах його рекомендується застосовувати в
першу чергу, оскільки якщо послідовність не пройде цей тест, то немає рації
застосовувати до неї інші. Також в якості підсилення можна розглядати умову
рівноімовірності серій знаків, коли рівноімовірними в послідовності повинні бути пари,
трійки, четвірки знаків тощо.
Послідовність
Yj
задовольняє умові незалежності знаків, якщо імовірність
прийняти деяке значення для
Yj
не залежить від того, які значення прийняли
1 2 1
, ,..., Y Y Yj
.
Однак перевірка такої умови зазвичай вкрай важка, тому часто розглядають більш
послаблені вимоги – наприклад, значення
Yj
не повинно залежати від значення
Yj1
(незалежність від попереднього знаку).
Послідовність
Yj
задовольняє умові однорідності, якщо для довільної реалізації
вибірковий розподіл, одержаний на всій послідовності, буде співпадати із вибірковим
розподілом, одержаним на довільній її підпослідовності достатньої довжини; іншими
словами, на довільному фрагменті послідовність веде себе однаково. Зауважимо, що для
виконання умови однорідності не важливо, який саме розподіл будуть мати
Yj
. Зокрема,
цей розподіл не обов’язково повинен бути рівноімовірним.
Перевірка умови однорідності в повному обсязі також доволі складна, тому на
практиці перевіряють більш слабкі форми даної умови – наприклад, розбивають
послідовність на окремі інтервали та перевіряють, чи співпадають вибіркові розподіли на
цих інтервалах.
Сформулюємо критерії Пірсона для кожної з наведених умов. Надалі ми вважаємо,
що послідовність, яка перевіряється, представлена у вигляді байтової послідовності, тобто
область значень кожної випадкової величини
Yj
лежить між 0 і 255. Якщо генератор, який
перевіряється, повертає послідовність бітів, то вихідні значення групуються по вісім біт.
1) Критерій перевірки рівноімовірності знаків
Крок 1. Розглядається байтова послідовність
Yj, j 1,...,m
. Сформулюємо гіпотезу
H0
, що полягає в тому, що всі байти послідовності рівноімовірні.
7
Крок 2. За значеннями послідовності
Yj, j 1,...,m
обчислюється статистика



255
0
2
2
( )
j j
j j
n
v n

, де
j
v – число байтів j, що спостерігається у послідовності,
j n –
очікуване число байтів j у послідовності за умови, що вірна гіпотеза
H0
, тобто в даному
випадку
256
m nj

для всіх j = 0,…...255.
Крок 3. Обчислюється граничне значення
2
1
, що відповідає рівню значимості 
при
l  255 , за формулою:
 l Z  l   1
2
1 2
, де
Z1 – (1)-квантиль стандартного
нормального розподілу.
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить експериментальним даним,
у противному випадку гіпотеза
H0
відкидається.
2) Критерій перевірки незалежності знаків
Крок 1. Байти послідовності послідовність
Yj, j 1,...,m
розглядаються парами
( , ) Y2i1 Y2i
, i 1,..n
, де
  2
m n  – ціла частина
m 2
. Нехай
H0
– гіпотеза, що полягає в тому,
що байти послідовності
Yj, j 1,...,m
незалежні від попереднього значення.
Крок 2. За значеннями послідовності за допомогою формули








  

255
, 0
2
2
1
i j i j
ij
v
v
n


обчислюється значення статистики
2

за умови, що вірна гіпотеза
H0
про незалежність
байтів, де
ij v – кількість появи пари
(i, j)
і


255
i, j 0
vij n , 

255
j 0
i ij v v – кількість появи байта i
на першому місці в парі,


255
i 0
j ij  v – кількість появи байта j на другому місці в парі.
Крок 3. За формулою
 l Z  l   1
2
1 2
визначається граничне значення для
розподілу
2
1
, що відповідає рівню значимості  при
2
l  255 .
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить експериментальним даним, у
противному випадку гіпотеза
H0
відкидається.
3) Критерій перевірки однорідності двійкової послідовності
Критерій перевірки однорідності аналогічний критерію для перевірки
незалежності.
Крок 1. Послідовність
Yj
розбивається на r відрізків довжиною
  r
m
m 

, де m –
загальне число байтів, n  m'
r – загальне число байтів, що використовуються.
Формулюється гіпотеза
H0
про вибір байтів з того самого розподілу.
Крок 2. За значеннями послідовності за допомогою формули








  



255
0
1
0
2
2
1
i
r
j i j
ij
v
v
n


обчислюється значення статистики
2

за умови, що вірна гіпотеза
H0
про вибір з одного
розподілу, де
ij v – кількість появи байта i у відрізку j, 



1
0
r
j
i ij v v , v m
i
j ij
  


255
0

(зауважимо, що
 j
дорівнює довжині j-того відрізка; в нашому тесті всі відрізки мають
однакову довжину, але це не обов’язково).
Крок 3. За формулою
 l Z  l   1
2
1 2
визначається граничне значення для
8
розподілу
2
1
, що відповідає рівню значимості  при
l  255(r 1).
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить дослідним даним, у
противному випадку гіпотеза
H0
відкидається.
Граничні значення
(1) -квантилей
Z1
для стандартного нормального розподілу
обчислюються за таблицями, наведеними у більшості посібників з теорії імовірностей та
математичної статистики.
3. Порядок і рекомендації щодо виконання роботи
1. Написати програми, які реалізують генератори псевдовипадкових бітів,
наведені у розділі 2.3 теоретичних відомостей, а саме:
1) вбудований генератор вашої мови програмування;
2) генератор LehmerLow;
3) генератор LehmerHigh;
4) генератор L20;
5) генератор L89;
6) генератор Джиффі (Geffe);
7) генератор «Бібліотекар»;
8) генератор Вольфрама;
9) генератор Блюма-Мікалі BM;
10) генератор BM_bytes (байтова модифікація генератору Блюма-Мікалі);
11) генератор BBS;
12) генератор BBS_bytes (байтова модифікація генератору BBS).
2. Розробити програми для реалізації трьох тестів перевірки якості двійкових
послідовностей: про рівноімовірність розподілу, про незалежність і про однорідність (див.
розділ 2.4 теоретичних відомостей). Програми повинні враховувати можливості введення
випробовуваної послідовності різної довжини із зазначених датчиків, а також із зовні
заданого файлу, можливості задавати різні значення рівня значимості

(обов’язково:
  0.01; 0.05; 0.1
, інші значення за бажанням).
У програмі повинне бути передбачене відображення на екрані комп'ютера
результатів обробки послідовності, що перевіряється тестами, із зазначенням вхідних
даних послідовності (її довжини, датчиків, що її генерують чи зовнішнього файлу),
обраних значень

, обчислених та теоретичних значень
2

і висновку (у яких випадках
послідовності відкидаються чи приймаються зазначеними критеріями).
3. Провести обробку трьома побудованими тестами прикладів послідовностей,
згенерованих зазначеними датчиками, для значень
  0,01; 0,05; 0,1
. Пам’ятайте, що для
одержання статистично достовірних даних ваша послідовність повинна містити
щонайменше мільйон бітів (краще декілька мільонів).
При багатократному проведенні експериментів ви повинні пам’ятати, що для
одержання нових послідовностей з того чи іншого датчика треба використовувати нові
стартові значення. В промислових реалізаціях для ініціалізації програмних генераторів
псевдовипадкових чисел використовують апаратні датчики, що реалізують фізичні
генератори. В межах даної роботи для ініціалізації можна використовувати інші програмні
датчики або доступну ентропію (системні таймери, траєкторію миші, клавіатурний набір,
ідентифікатори системних подій тощо).
9
4. Оформлення звіту
Звіт до комп’ютерного практикуму оформлюється згідно зі стандартними
правилами оформлення наукових робіт, за такими винятками:
– дозволяється використовувати шрифт Times New Roman 12pt та одинарний
інтервал між рядками;
– для оформлення фрагментів текстів програм дозволяється використовувати
шрифт Courier New 10pt та друкувати тексти в дві колонки;
– дозволяється не починати нові розділи з окремої сторінки.
До звіту можна не включати анотацію, перелік термінів та позначень та перелік
використаних джерел. Також не обов’язково оформлювати зміст.
Звіт має містити:
– мету лабораторної роботи;
– постановку задачі;
– хід роботи, опис труднощів, що виникали, та шляхів їх розв’язання;
– результати дослідження, зокрема, експериментальні результати з перевірки
статистичних гіпотез, подані у вигляді таблиць або діаграм; зокрема, необхідно навести
підсумкову таблицю, в якій навести для кожного досліджуваного генератору, кожного
тесту та кожного рівня значущості теоретичні значення
2

, обчислені за послідовністю
значення
2

та результат проходження відповідного тесту;
– порівняння генераторів, що досліджувались, з точки зору статистичного аналізу
та криптографічного застосування;
– висновки до роботи.
Тексти всіх програм здаються викладачеві в електронному вигляді для перевірки на
плагіат. До захисту комп’ютерного практикуму допускаються студенти, які оформили звіт
та пройшли перевірку програмного коду.
5. Контрольні запитання
1. Що таке статистична гіпотеза? Яка гіпотеза називається простою? Яка
складною?
2. Дайте визначення критерію згоди.
3. Що таке статистика критерію, критична область і рівень значимості?
4. Який розподіл називається альтернативним?
5. Який сенс функції потужності критерію?
6. Які властивості повинна мати криптографічно якісна випадкова послідовність?
7. Що таке рівноімовірність знаків послідовності? Наведіть приклад генератора,
що забезпечує таку властивість.
8. Що таке незалежність знаків послідовності? Наведіть приклад генератора, що
забезпечує таку властивість.
9. Що таке однорідність послідовності? Наведіть приклад генератора, що
забезпечує таку властивість.
10. За яких умов лінійний конгруентний генератор має найбільший період і чому
дорівнює це значення?
11. Який період може бути в лінійної рекурентної послідовності? За яких умов
забезпечується максимально можливий період?
12. Як обчислюється період генератору Джиффі?
13. Покажіть, що якщо аналітик знає числа p та q, що використовуються у
10
генераторі BBS, то за значенням
n
r
та послідовністю бітів
n
x , x ,..., x 1 2
він може знайти
значення
1
r .
14. Поясніть аномальні результати генераторів LehmerLow та Librarian.
Починаючи з якої довжини послідовності будуть одержуватись такі значення статистик?
6. Оцінювання комп’ютерного практикуму
За виконання комп’ютерного практикуму студент може одержати до 16
рейтингових балів; зокрема, оцінюються такі позиції:
– реалізація програм – до шести балів (в залежності від правильності та
швидкодії);
– теоретичний захист роботи – до восьми балів;
– своєчасне виконання практичної частини – 1 бал;
– своєчасний теоретичний захист – 1 бал;
– несвоєчасне виконання роботи – (-1) бал за кожен тиждень пропуску.
Програмний код, створений під час виконання комп’ютерного практикуму,
перевіряється на наявність неправомірних запозичень (плагіату) за допомогою сервісу
Stanford MOSS Antiplagiarism. У разі виявлення в програмному коді неправомірних
запозичень реалізація програм оцінюється у 0 балів, а за виконання практикуму студент
одержує штраф (–10) балів.
Студенти допускаються до теоретичного захисту тільки за умови оформленого
звіту з виконання практикуму та проходження перевірки програмного коду.
А еще можно добавить русский текст It is masterpiece of foreign classic literature
1
АСИМЕТРИЧНІ КРИПТОСИСТЕМИ
ТА ПРОТОКОЛИ
КОМП’ЮТЕРНИЙ ПРАКТИКУМ №1
Побудова тестів для перевірки якості випадкових та
псевдовипадкових послідовностей
1. Мета роботи
Вивчення критеріїв згоди і набуття навичок у побудові та застосуванні тестів для
перевірки статистичних властивостей бінарних випадкових і псевдовипадкових
послідовностей, ознайомлення з поняттям М-послідовності.
2. Основні теоретичні відомості
2.1. Критерії згоди та їх основні характеристики
Статистичною гіпотезою називається будь-яке твердження про вид чи
властивості розподілу випадкових величин, що спостерігаються в експерименті. Звичайно
її називають основною чи нульовою гіпотезою і позначають символом
H0
. Якщо
формулюється тільки одна гіпотеза, то правило, згідно з яким перевіряється,
погоджуються наявні статистичні дані з цією гіпотезою, чи вони її спростовують,
називаються критерієм згоди. Якщо гіпотеза
H0
однозначно фіксує розподіл
спостережень, то її називають простою, у противному випадку – складною. Для побудови
критерію шукають статистику
T(x)
(тобто функцію від випадкових результатів
спостережень), що характеризує відхилення емпіричних даних від гіпотетичних значень у
випадку справедливості гіпотези
H0
.
Припустимо, що така статистика і її розподіл при гіпотезі
H0
знайдені. Нехай
 –
множина, якій належать можливі значення величин, що спостерігаються в експерименті, і
 t :t  T(x), x – множина усіх можливих значень статистики Т; визначимо для
фіксованого заздалегідь достатнього малого числа
  0
підмножину
1  
так, щоб
імовірність здійснення події
T(X)1
у випадку справедливості гіпотези
H0
задовольняла умові
PT(X)1 H0 .
Правило перевірки гіпотези
H0
можна сформулювати в такий спосіб. Нехай х –
реалізація випадкової величини Х, що спостерігалася,
t  T(x) – відповідне значення
статистики Т. Якщо виявиться, що
1
t , то в припущенні справедливості гіпотези
H0
відбулася малоймовірна подія і ця гіпотеза повинна бути відкинута як така, що
суперечить статистичним даним. У противному випадку (тобто якщо
1
t
) немає
підстав відмовлятися від прийнятої гіпотези і варто вважати, що спостереження не
суперечать гіпотезі (чи погоджуються з нею).
В описаній методиці статистику
T
називають статистикою критерію, а
підмножину її значень
1 – критичною областю для гіпотези
H0
. Число  називають
рівнем значимості критерію, і його можна вважати імовірністю помилкового відкидання
2
гіпотези
H0
, коли вона вірна. У конкретних задачах її величину вибирають звичайно
рівною 0,1; 0,05; 0,01 і т.д.
Кожен критерій будується для того, щоб визначити, чи мають місце ті чи інші
відхилення від основної гіпотези. Характер таких відхилень може бути різним, тому треба
мати критерії як універсального типу (такі, що „уловлюють”, будь-які відхилення від
основної гіпотези), так і призначені для виявлення відхилень тільки певного типу.
Будь-який розподіл
FX
 F
спостереженої випадкової величини
X
, що може
виявитися правдивим (тобто допустимим в даній ситуації), але такий, що відрізняється від
гіпотетичного (тобто розподілу при основній гіпотезі Н0), називають альтернативним
розподілом чи альтернативою. Сукупність всіх альтернативних розподілів називають
альтернативною гіпотезою і позначають символом Н1.
Нехай, далі, для гіпотези
H0
, що перевіряється, побудований деякий критерій з
рівнем значимості α, заснований на статистиці Т(X), і нехай
1
- відповідна критична
область. Величину
( ) ( ; ) W F W 1 F
, що являє собою імовірність влучення значення
статистики критерію в критичну область, коли істинним розподілом спостережень є
розподіл F, називають функцією потужності критерію при альтернативі F. У термінах
функції W(F) можна сказати, що критерій тим кращий (тим „потужніший”), чим більше
його потужність при альтернативах. Бажаною властивістю критерію є властивість
незміщеності, що означає, що повинна виконуватися умова
1 W(F) , F H .
Важливим показником кожного критерію є трудомісткість практичної реалізації
відповідного алгоритму. На практиці, коли потрібно швидко одержати відповідь, перевага
нерідко віддається критерію, що просто реалізується, навіть якщо він не є оптимальним у
теоретичному розумінні.
2.2. Критерій згоди хі-квадрат Пірсона для перевірки гіпотези про вид
розподілу
Критерій можна використовувати для будь-яких розподілів, у тому числі і
багатовимірних. Щоб скористатися цим критерієм, вибіркові дані попередньо групують,
тобто переходять до частотного представлення вихідних даних. Нехай
( ,..., ) 1 N
v  v v –
вектор частот влучення вибіркових точок у відповідні інтервали групування
,..., ( ... ) Е1 ЕN
v1   vN
 n
і
( ,..., )
(0) (0)
1
(0)
p  p pN
, де
pj P( j H0
), j 1,....,N
(0)
  Е 
. У цьому
випадку розподіл вектора частот v при гіпотезі
H0
буде поліномінальним з параметрами n
і
(0)
p , і гіпотеза
H0
зводиться до гіпотези про те, що імовірності поліноміального
розподілу побудованого вектора частот v мають задані значення
pj
, j 1,....,N
(0)

. Як
статистику, що характеризує відхилення вибіркових даних (тобто частот
j
v
) від
відповідних гіпотетичних значень (у даному випадку від середніх
(0)
0 E(vj H )  np
),
приймають наступну статистику
X X v v np np v np n
N
j
j j
N
j
n

n
  j  j j
  
 1
2 (0)
1
2 2 (0) 2 0
( ) ( ) ( ) ( ) ,
а критичну область задають у виді
1
 t  t
. Точний умовний (при істинності гіпотези
H0
) розподіл
L( )0
2 Xn H
цієї статистики незручний для обчислення (при заданому рівні
значимості) критичної границі

t
, але для великих обсягів вибірок n статистика
2 Xn
має
3
при гіпотезі
H0
простий граничний розподіл, що не залежить від гіпотези (тобто від чисел
(0)
pj
). Справедливе наступне твердження.
Теорема. Якщо
0 pj 1, j 1,...., N
(0)
   , то при
n 
L( ) ( 1)
2
0
2 Xn H   N  ,
де
( 1)
2
 N  – хі-квадрат розподіл зі
N 1
ступенем волі, що затабульований і
апроксимується за допомогою нормального розподілу при великих
N .
На практиці граничний розподіл
( 1)
2
 N  можна використовувати з добрим
наближенням уже при
n  50
і
vj  5
. При виконанні цих умов відповідно до теореми
критичну границю

t
вибирають рівною
2
1,(N1)
, тобто (
1
)-квантилі розподілу
( 1)
2
 N  . Квантилі знаходяться за таблицями розподілу хі-квадрат. При великій кількості
ступенів волі (
N  30
) можна скористатися апроксимуючою формулою
2( 1) 1 1
2
1,(N1)  N  Z   N  , де
Z1 – квантиль стандартного нормального розподілу.
Таким чином, критерій згоди
2

має наступний вид: нехай задані рівень
значимості  та обсяг вибірки n, і значення
( ,..., ) h  h1 hN
вектора частот
( ,..., ) 1 N
v  v v ,
що спостерігалися, задовольняють умовам
n  50,hj  5, j 1,...,N
; тоді якщо значення
статистики
( )
2
t  Xn h
, що спостерігалося, задовольняє нерівності
2
 1 ,(N1)
t  
, то
гіпотезу
H0
відкидають, у противному випадку гіпотеза
H0
не суперечить результатам
експерименту.
2.3. Генератори псевдовипадкових чисел
В рамках даного комп’ютерного практикуму необхідно дослідити наступні дев’ять
генераторів псевдовипадкових чисел та їх модифікацій. Зверніть увагу, що деякі з них є
бітовими, а інші – байтовими.
1) Вбудований генератор псевдовипадкових чисел вашої мови програмування.
Зазвичай (наприклад, в таких мовах, як Pascal та C/C++) для вбудованого датчика
використовується лінійний конгруентний генератор (або генератор Лемера – див. нижче).
Більш молоді мови надають можливість використання складних криптографічних
генераторів (наприклад, мова Java має класи датчиків на основі геш-функції SHA-1).
2) Лінійний конгруентний генератор (генератор Лемера) обчислює послідовність
xn1
 (a  xn  c)modm
для фіксованих значень a, c та m і деякого початкового значення
0
x
. Доведено, що максимальний період такого генератора дорівнює m і досягається він за
виконання таких трьох умов:
– числа m та c повинні бути взаємнопрості;
– число
a 1
повинно ділитись на кожен простий дільник числа m;
– якщо m ділиться на 4, то
a 1
теж повинно ділитись на 4.
Значення
n
x
можуть повертатись безпосередньо або розглядатись як стани, з яких
за допомогою деякого перетворення обчислюються біти (байти) вихідної послідовності.
Пропонується дослідити дві модифікації лінійного конгруентного генератора, LehmerLow
та LehmerHigh, що генерують випадкові байти. Обидві вони обчислюють послідовність
4
невід’ємних 32-бітних чисел
n
x
; значення параметрів дорівнюють
32 m  2 , 2 1
16 a   ,
c 119
, початкове значення
0
x
обирається довільно, але не повинно дорівнювати нулю.
LehmerLow в якості n-того вихідного значення повертає молодші 8 біт числа
n
x ,
LehmerHigh – старші 8 біт
n
x .
3) Генератор псевдовипадкових двійкових послідовностей L20 задається
рекурентною формулою (що описує функціонування лінійного регістра зсуву)
, 20, 21... xt
 xt3  xt5  xt9  xt2 0 t  , де
{0,1} t
x ,  – булеве додавання. Перші 20
елементів послідовності обираються довільним образом, але не всі одночасно рівні нулю.
У даного генератора вихідна послідовність має максимальний можливий період – (2 1)
20

бітів; така послідовність називається М-послідовністю.
4) Генератор псевдовипадкових двійкових послідовностей L89 аналогічний
попередньому генератору за будовою. Він відрізняється визначенням елементів
послідовності за формулою
, 89, 90... xt
 xt38  xt89 t 
, де перші вісімдесят дев'ять
елементів обираються довільним чином, але не всі рівні нулю. Генератор L89 має період
2 1
89
 бітів і також генерує М-послідовність.
5) Генератор Джиффі (Geffe) – потоковий шифр, що генерує шифруючу гаму за
рахунок нелінійної комбінації трьох лінійних регістрів зсуву (властивості даного шифру
досліджувались у комп’ютерному практикумі з дисциплін «Симетрична криптографія» та
«Прикладна криптологія 1»). Шифруюча гама генератора може розглядатись як
псевдовипадкова двійкова послідовність.
Для виконання комп’ютерного практикуму пропонується дослідити генератор
Джиффі, який використовує наступні три лінійні рекурентні послідовності, що
генеруються відповідними лінійними регістрами зсуву:
регістр L11:
11 0 2
x  x  x
;
регістр L9:
9 0 1 3 4
y  y  y  y  y
;
регістр L10:
10 0 3
s  s  s .
Вихідна послідовність бітів
( )i
z
обчислюється за правилом
i i i i i
z  s x (1 s )y .
Початкові заповнення кожного з регістрів генератора Джиффі обираються
довільними, але не нульовими.
6) Генератор Вольфрама – запропонований Еріком Вольфрамом генератор,
пристосований до швидкої апаратної реалізації.
Генератор використовує 32-бітні стани (однак може бути легко перебудований під
будь-яку бітність). Початкове значення
r0  0
обирається довільним чином. Вихідна
послідовність
, , ,... 0 1 2
x x x
обчислюється за таким правилом:
xi
 ri mod 2 ,
( 1) ( ( 1)) ri1
 ri   ri  ri  ,
де операції логічного АБО () та виключного АБО () виконуються окремо над кожним
бітом векторів-операндів, а
i
x
є останнім бітом вектору
i
r .
7) Генератор «Бібліотекар» перетворює у байтову послідовність змістовний текст
довільною мовою (наприклад, випадкові фрагменти творів Мануїла Канта німецькою
5
мовою, що потрясають своєю фундаментальністю, або фанфікі за творами Джоан Кетлін
Роулінг, які у більшості своїй і так є випадковим мотлохом). При реалізації цього
генератору потрібно враховувати, що символи відповідного тексту повинні
представлятись у вигляді байтів (тобто кодування використовує вісім біт на символ).
8) Генератор BM (Блюма-Мікалі) – перший криптографічний генератор,
побудований на основі формальної теорії, яка доводить його властивості. Так, показано,
що можливість вгадувати біти вихідної послідовності цього генератору еквівалентна
можливості розв’язувати задачу дискретного логарифмування.
Нехай p велике просте число, a – примітивний корінь за модулем p (генератор
групи
*
Z p
). Початкове значення стану
T0
, 0  T0  p 1
обирається випадковим чином.
Послідовність станів обчислюється за рекурентним співвідношенням
T a p
Ti
i1
 mod .
Вихідна послідовність бітів
, , ,... 0 1 2
x x x
обчислюється за таким правилом:










2
1
0,
2
1
1,
p
T
p
T
x
i
i
i
.
Байтова модифікація генератору BM в якості вихідного байту
i
x
повертає таке
значення k, що
256
( 1)( 1)
256
( 1)  
 
 k p
T
k p
i
.
Для виконання практикуму пропонується використовувати такі параметри:
p = CEA42B987C44FA642D80AD9F51F10457690DEF10C83D0BC1BCEE12FC3B6093E3;
a = 5B88C41246790891C095E2878880342E88C79974303BD0400B090FE38A688356.
Зауважимо, що для зручності число p обрано у формі
p  2q 1
, де число q також
просте:
q = 675215CC3E227D3216C056CFA8F8822BB486F788641E85E0DE77097E1DB049F1.
9) Генератор BBS (Блюм-Блюма-Шуба) побудовано на ідеях Блюма та Мікалі,
однак для генерування псевдовипадкових бітів він використовує апарат теорії чисел.
Доведено, що можливість вгадувати біти вихідної послідовності цього генератору
еквівалентна можливості розв’язувати задачу факторизації.
Нехай p та q – різні великі прості числа виду
4k  3
і
n  pq
. Початкове значення
r0  2
обирається довільним чином. Вихідна послідовність
, ,... 1 2
x x
обчислюється за таким
правилом:
ri
ri mod n
2
 1
,
xi
 ri mod 2 ,
тобто
i
x
є останнім бітом числа
i
r
(зверніть увагу, що вихідні біти нумеруються з одиниці
– стан
0
r
не використовується для безпосереднього генерування вихідної послідовності).
Байтова модифікація генератору BBS обчислює вихідну послідовність як
xi
 ri mod 256
, тобто повертаються вісім молодших біт числа
i
r .
6
Для виконання практикуму пропонується використовувати такі числа:
p = D5BBB96D30086EC484EBA3D7F9CAEB07;
q = 425D2B9BFDB25B9CF6C416CC6E37B59C1F.
2.4. Критерії і тести для перевірки якості випадкових двійкових
послідовностей
В цьому розділі наведено три критерії, що перевіряють статистичні властивості
псевдовипадкових послідовностей: рівноімовірність знаків, незалежність сусідніх знаків,
однорідність послідовності. Всі ці критерії є критеріями хі-квадрат Пірсона для перевірки
відповідним чином сформульованих гіпотез.
Розглянемо послідовність
Yj, j 1,...,m, де кожна
Yj
є випадковою величиною, що
приймає набір значень із алфавіту А. Всі величини
Yj
мають однаковий розподіл та
розглядаються як вихідні значення деякого генератору.
Послідовність
Yj
задовольняє умові рівноімовірності знаків, якщо кожна
Yj
розподілена рівноімовірно на A. Таким чином, кожне значення із А повинно зустрічатись у
довільній реалізації даної послідовності однакову кількість разів.
Тест на виконання умови рівноімовірності не відрізняється великою чутливістю,
однак він доволі швидкий. В практичних задачах його рекомендується застосовувати в
першу чергу, оскільки якщо послідовність не пройде цей тест, то немає рації
застосовувати до неї інші. Також в якості підсилення можна розглядати умову
рівноімовірності серій знаків, коли рівноімовірними в послідовності повинні бути пари,
трійки, четвірки знаків тощо.
Послідовність
Yj
задовольняє умові незалежності знаків, якщо імовірність
прийняти деяке значення для
Yj
не залежить від того, які значення прийняли
1 2 1
, ,..., Y Y Yj
.
Однак перевірка такої умови зазвичай вкрай важка, тому часто розглядають більш
послаблені вимоги – наприклад, значення
Yj
не повинно залежати від значення
Yj1
(незалежність від попереднього знаку).
Послідовність
Yj
задовольняє умові однорідності, якщо для довільної реалізації
вибірковий розподіл, одержаний на всій послідовності, буде співпадати із вибірковим
розподілом, одержаним на довільній її підпослідовності достатньої довжини; іншими
словами, на довільному фрагменті послідовність веде себе однаково. Зауважимо, що для
виконання умови однорідності не важливо, який саме розподіл будуть мати
Yj
. Зокрема,
цей розподіл не обов’язково повинен бути рівноімовірним.
Перевірка умови однорідності в повному обсязі також доволі складна, тому на
практиці перевіряють більш слабкі форми даної умови – наприклад, розбивають
послідовність на окремі інтервали та перевіряють, чи співпадають вибіркові розподіли на
цих інтервалах.
Сформулюємо критерії Пірсона для кожної з наведених умов. Надалі ми вважаємо,
що послідовність, яка перевіряється, представлена у вигляді байтової послідовності, тобто
область значень кожної випадкової величини
Yj
лежить між 0 і 255. Якщо генератор, який
перевіряється, повертає послідовність бітів, то вихідні значення групуються по вісім біт.
1) Критерій перевірки рівноімовірності знаків
Крок 1. Розглядається байтова послідовність
Yj, j 1,...,m
. Сформулюємо гіпотезу
H0
, що полягає в тому, що всі байти послідовності рівноімовірні.
7
Крок 2. За значеннями послідовності
Yj, j 1,...,m
обчислюється статистика



255
0
2
2
( )
j j
j j
n
v n

, де
j
v – число байтів j, що спостерігається у послідовності,
j n –
очікуване число байтів j у послідовності за умови, що вірна гіпотеза
H0
, тобто в даному
випадку
256
m nj

для всіх j = 0,…...255.
Крок 3. Обчислюється граничне значення
2
1
, що відповідає рівню значимості 
при
l  255 , за формулою:
 l Z  l   1
2
1 2
, де
Z1 – (1)-квантиль стандартного
нормального розподілу.
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить експериментальним даним,
у противному випадку гіпотеза
H0
відкидається.
2) Критерій перевірки незалежності знаків
Крок 1. Байти послідовності послідовність
Yj, j 1,...,m
розглядаються парами
( , ) Y2i1 Y2i
, i 1,..n
, де
  2
m n  – ціла частина
m 2
. Нехай
H0
– гіпотеза, що полягає в тому,
що байти послідовності
Yj, j 1,...,m
незалежні від попереднього значення.
Крок 2. За значеннями послідовності за допомогою формули








  

255
, 0
2
2
1
i j i j
ij
v
v
n


обчислюється значення статистики
2

за умови, що вірна гіпотеза
H0
про незалежність
байтів, де
ij v – кількість появи пари
(i, j)
і


255
i, j 0
vij n , 

255
j 0
i ij v v – кількість появи байта i
на першому місці в парі,


255
i 0
j ij  v – кількість появи байта j на другому місці в парі.
Крок 3. За формулою
 l Z  l   1
2
1 2
визначається граничне значення для
розподілу
2
1
, що відповідає рівню значимості  при
2
l  255 .
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить експериментальним даним, у
противному випадку гіпотеза
H0
відкидається.
3) Критерій перевірки однорідності двійкової послідовності
Критерій перевірки однорідності аналогічний критерію для перевірки
незалежності.
Крок 1. Послідовність
Yj
розбивається на r відрізків довжиною
  r
m
m 

, де m –
загальне число байтів, n  m'
r – загальне число байтів, що використовуються.
Формулюється гіпотеза
H0
про вибір байтів з того самого розподілу.
Крок 2. За значеннями послідовності за допомогою формули








  



255
0
1
0
2
2
1
i
r
j i j
ij
v
v
n


обчислюється значення статистики
2

за умови, що вірна гіпотеза
H0
про вибір з одного
розподілу, де
ij v – кількість появи байта i у відрізку j, 



1
0
r
j
i ij v v , v m
i
j ij
  


255
0

(зауважимо, що
 j
дорівнює довжині j-того відрізка; в нашому тесті всі відрізки мають
однакову довжину, але це не обов’язково).
Крок 3. За формулою
 l Z  l   1
2
1 2
визначається граничне значення для
8
розподілу
2
1
, що відповідає рівню значимості  при
l  255(r 1).
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить дослідним даним, у
противному випадку гіпотеза
H0
відкидається.
Граничні значення
(1) -квантилей
Z1
для стандартного нормального розподілу
обчислюються за таблицями, наведеними у більшості посібників з теорії імовірностей та
математичної статистики.
3. Порядок і рекомендації щодо виконання роботи
1. Написати програми, які реалізують генератори псевдовипадкових бітів,
наведені у розділі 2.3 теоретичних відомостей, а саме:
1) вбудований генератор вашої мови програмування;
2) генератор LehmerLow;
3) генератор LehmerHigh;
4) генератор L20;
5) генератор L89;
6) генератор Джиффі (Geffe);
7) генератор «Бібліотекар»;
8) генератор Вольфрама;
9) генератор Блюма-Мікалі BM;
10) генератор BM_bytes (байтова модифікація генератору Блюма-Мікалі);
11) генератор BBS;
12) генератор BBS_bytes (байтова модифікація генератору BBS).
2. Розробити програми для реалізації трьох тестів перевірки якості двійкових
послідовностей: про рівноімовірність розподілу, про незалежність і про однорідність (див.
розділ 2.4 теоретичних відомостей). Програми повинні враховувати можливості введення
випробовуваної послідовності різної довжини із зазначених датчиків, а також із зовні
заданого файлу, можливості задавати різні значення рівня значимості

(обов’язково:
  0.01; 0.05; 0.1
, інші значення за бажанням).
У програмі повинне бути передбачене відображення на екрані комп'ютера
результатів обробки послідовності, що перевіряється тестами, із зазначенням вхідних
даних послідовності (її довжини, датчиків, що її генерують чи зовнішнього файлу),
обраних значень

, обчислених та теоретичних значень
2

і висновку (у яких випадках
послідовності відкидаються чи приймаються зазначеними критеріями).
3. Провести обробку трьома побудованими тестами прикладів послідовностей,
згенерованих зазначеними датчиками, для значень
  0,01; 0,05; 0,1
. Пам’ятайте, що для
одержання статистично достовірних даних ваша послідовність повинна містити
щонайменше мільйон бітів (краще декілька мільонів).
При багатократному проведенні експериментів ви повинні пам’ятати, що для
одержання нових послідовностей з того чи іншого датчика треба використовувати нові
стартові значення. В промислових реалізаціях для ініціалізації програмних генераторів
псевдовипадкових чисел використовують апаратні датчики, що реалізують фізичні
генератори. В межах даної роботи для ініціалізації можна використовувати інші програмні
датчики або доступну ентропію (системні таймери, траєкторію миші, клавіатурний набір,
ідентифікатори системних подій тощо).
9
4. Оформлення звіту
Звіт до комп’ютерного практикуму оформлюється згідно зі стандартними
правилами оформлення наукових робіт, за такими винятками:
– дозволяється використовувати шрифт Times New Roman 12pt та одинарний
інтервал між рядками;
– для оформлення фрагментів текстів програм дозволяється використовувати
шрифт Courier New 10pt та друкувати тексти в дві колонки;
– дозволяється не починати нові розділи з окремої сторінки.
До звіту можна не включати анотацію, перелік термінів та позначень та перелік
використаних джерел. Також не обов’язково оформлювати зміст.
Звіт має містити:
– мету лабораторної роботи;
– постановку задачі;
– хід роботи, опис труднощів, що виникали, та шляхів їх розв’язання;
– результати дослідження, зокрема, експериментальні результати з перевірки
статистичних гіпотез, подані у вигляді таблиць або діаграм; зокрема, необхідно навести
підсумкову таблицю, в якій навести для кожного досліджуваного генератору, кожного
тесту та кожного рівня значущості теоретичні значення
2

, обчислені за послідовністю
значення
2

та результат проходження відповідного тесту;
– порівняння генераторів, що досліджувались, з точки зору статистичного аналізу
та криптографічного застосування;
– висновки до роботи.
Тексти всіх програм здаються викладачеві в електронному вигляді для перевірки на
плагіат. До захисту комп’ютерного практикуму допускаються студенти, які оформили звіт
та пройшли перевірку програмного коду.
5. Контрольні запитання
1. Що таке статистична гіпотеза? Яка гіпотеза називається простою? Яка
складною?
2. Дайте визначення критерію згоди.
3. Що таке статистика критерію, критична область і рівень значимості?
4. Який розподіл називається альтернативним?
5. Який сенс функції потужності критерію?
6. Які властивості повинна мати криптографічно якісна випадкова послідовність?
7. Що таке рівноімовірність знаків послідовності? Наведіть приклад генератора,
що забезпечує таку властивість.
8. Що таке незалежність знаків послідовності? Наведіть приклад генератора, що
забезпечує таку властивість.
9. Що таке однорідність послідовності? Наведіть приклад генератора, що
забезпечує таку властивість.
10. За яких умов лінійний конгруентний генератор має найбільший період і чому
дорівнює це значення?
11. Який період може бути в лінійної рекурентної послідовності? За яких умов
забезпечується максимально можливий період?
12. Як обчислюється період генератору Джиффі?
13. Покажіть, що якщо аналітик знає числа p та q, що використовуються у
10
генераторі BBS, то за значенням
n
r
та послідовністю бітів
n
x , x ,..., x 1 2
він може знайти
значення
1
r .
14. Поясніть аномальні результати генераторів LehmerLow та Librarian.
Починаючи з якої довжини послідовності будуть одержуватись такі значення статистик?
6. Оцінювання комп’ютерного практикуму
За виконання комп’ютерного практикуму студент може одержати до 16
рейтингових балів; зокрема, оцінюються такі позиції:
– реалізація програм – до шести балів (в залежності від правильності та
швидкодії);
– теоретичний захист роботи – до восьми балів;
– своєчасне виконання практичної частини – 1 бал;
– своєчасний теоретичний захист – 1 бал;
– несвоєчасне виконання роботи – (-1) бал за кожен тиждень пропуску.
Програмний код, створений під час виконання комп’ютерного практикуму,
перевіряється на наявність неправомірних запозичень (плагіату) за допомогою сервісу
Stanford MOSS Antiplagiarism. У разі виявлення в програмному коді неправомірних
запозичень реалізація програм оцінюється у 0 балів, а за виконання практикуму студент
одержує штраф (–10) балів.
Студенти допускаються до теоретичного захисту тільки за умови оформленого
звіту з виконання практикуму та проходження перевірки програмного коду.
А еще можно добавить русский текст It is masterpiece of foreign classic literature
1
АСИМЕТРИЧНІ КРИПТОСИСТЕМИ
ТА ПРОТОКОЛИ
КОМП’ЮТЕРНИЙ ПРАКТИКУМ №1
Побудова тестів для перевірки якості випадкових та
псевдовипадкових послідовностей
1. Мета роботи
Вивчення критеріїв згоди і набуття навичок у побудові та застосуванні тестів для
перевірки статистичних властивостей бінарних випадкових і псевдовипадкових
послідовностей, ознайомлення з поняттям М-послідовності.
2. Основні теоретичні відомості
2.1. Критерії згоди та їх основні характеристики
Статистичною гіпотезою називається будь-яке твердження про вид чи
властивості розподілу випадкових величин, що спостерігаються в експерименті. Звичайно
її називають основною чи нульовою гіпотезою і позначають символом
H0
. Якщо
формулюється тільки одна гіпотеза, то правило, згідно з яким перевіряється,
погоджуються наявні статистичні дані з цією гіпотезою, чи вони її спростовують,
називаються критерієм згоди. Якщо гіпотеза
H0
однозначно фіксує розподіл
спостережень, то її називають простою, у противному випадку – складною. Для побудови
критерію шукають статистику
T(x)
(тобто функцію від випадкових результатів
спостережень), що характеризує відхилення емпіричних даних від гіпотетичних значень у
випадку справедливості гіпотези
H0
.
Припустимо, що така статистика і її розподіл при гіпотезі
H0
знайдені. Нехай
 –
множина, якій належать можливі значення величин, що спостерігаються в експерименті, і
 t :t  T(x), x – множина усіх можливих значень статистики Т; визначимо для
фіксованого заздалегідь достатнього малого числа
  0
підмножину
1  
так, щоб
імовірність здійснення події
T(X)1
у випадку справедливості гіпотези
H0
задовольняла умові
PT(X)1 H0 .
Правило перевірки гіпотези
H0
можна сформулювати в такий спосіб. Нехай х –
реалізація випадкової величини Х, що спостерігалася,
t  T(x) – відповідне значення
статистики Т. Якщо виявиться, що
1
t , то в припущенні справедливості гіпотези
H0
відбулася малоймовірна подія і ця гіпотеза повинна бути відкинута як така, що
суперечить статистичним даним. У противному випадку (тобто якщо
1
t
) немає
підстав відмовлятися від прийнятої гіпотези і варто вважати, що спостереження не
суперечать гіпотезі (чи погоджуються з нею).
В описаній методиці статистику
T
називають статистикою критерію, а
підмножину її значень
1 – критичною областю для гіпотези
H0
. Число  називають
рівнем значимості критерію, і його можна вважати імовірністю помилкового відкидання
2
гіпотези
H0
, коли вона вірна. У конкретних задачах її величину вибирають звичайно
рівною 0,1; 0,05; 0,01 і т.д.
Кожен критерій будується для того, щоб визначити, чи мають місце ті чи інші
відхилення від основної гіпотези. Характер таких відхилень може бути різним, тому треба
мати критерії як універсального типу (такі, що „уловлюють”, будь-які відхилення від
основної гіпотези), так і призначені для виявлення відхилень тільки певного типу.
Будь-який розподіл
FX
 F
спостереженої випадкової величини
X
, що може
виявитися правдивим (тобто допустимим в даній ситуації), але такий, що відрізняється від
гіпотетичного (тобто розподілу при основній гіпотезі Н0), називають альтернативним
розподілом чи альтернативою. Сукупність всіх альтернативних розподілів називають
альтернативною гіпотезою і позначають символом Н1.
Нехай, далі, для гіпотези
H0
, що перевіряється, побудований деякий критерій з
рівнем значимості α, заснований на статистиці Т(X), і нехай
1
- відповідна критична
область. Величину
( ) ( ; ) W F W 1 F
, що являє собою імовірність влучення значення
статистики критерію в критичну область, коли істинним розподілом спостережень є
розподіл F, називають функцією потужності критерію при альтернативі F. У термінах
функції W(F) можна сказати, що критерій тим кращий (тим „потужніший”), чим більше
його потужність при альтернативах. Бажаною властивістю критерію є властивість
незміщеності, що означає, що повинна виконуватися умова
1 W(F) , F H .
Важливим показником кожного критерію є трудомісткість практичної реалізації
відповідного алгоритму. На практиці, коли потрібно швидко одержати відповідь, перевага
нерідко віддається критерію, що просто реалізується, навіть якщо він не є оптимальним у
теоретичному розумінні.
2.2. Критерій згоди хі-квадрат Пірсона для перевірки гіпотези про вид
розподілу
Критерій можна використовувати для будь-яких розподілів, у тому числі і
багатовимірних. Щоб скористатися цим критерієм, вибіркові дані попередньо групують,
тобто переходять до частотного представлення вихідних даних. Нехай
( ,..., ) 1 N
v  v v –
вектор частот влучення вибіркових точок у відповідні інтервали групування
,..., ( ... ) Е1 ЕN
v1   vN
 n
і
( ,..., )
(0) (0)
1
(0)
p  p pN
, де
pj P( j H0
), j 1,....,N
(0)
  Е 
. У цьому
випадку розподіл вектора частот v при гіпотезі
H0
буде поліномінальним з параметрами n
і
(0)
p , і гіпотеза
H0
зводиться до гіпотези про те, що імовірності поліноміального
розподілу побудованого вектора частот v мають задані значення
pj
, j 1,....,N
(0)

. Як
статистику, що характеризує відхилення вибіркових даних (тобто частот
j
v
) від
відповідних гіпотетичних значень (у даному випадку від середніх
(0)
0 E(vj H )  np
),
приймають наступну статистику
X X v v np np v np n
N
j
j j
N
j
n

n
  j  j j
  
 1
2 (0)
1
2 2 (0) 2 0
( ) ( ) ( ) ( ) ,
а критичну область задають у виді
1
 t  t
. Точний умовний (при істинності гіпотези
H0
) розподіл
L( )0
2 Xn H
цієї статистики незручний для обчислення (при заданому рівні
значимості) критичної границі

t
, але для великих обсягів вибірок n статистика
2 Xn
має
3
при гіпотезі
H0
простий граничний розподіл, що не залежить від гіпотези (тобто від чисел
(0)
pj
). Справедливе наступне твердження.
Теорема. Якщо
0 pj 1, j 1,...., N
(0)
   , то при
n 
L( ) ( 1)
2
0
2 Xn H   N  ,
де
( 1)
2
 N  – хі-квадрат розподіл зі
N 1
ступенем волі, що затабульований і
апроксимується за допомогою нормального розподілу при великих
N .
На практиці граничний розподіл
( 1)
2
 N  можна використовувати з добрим
наближенням уже при
n  50
і
vj  5
. При виконанні цих умов відповідно до теореми
критичну границю

t
вибирають рівною
2
1,(N1)
, тобто (
1
)-квантилі розподілу
( 1)
2
 N  . Квантилі знаходяться за таблицями розподілу хі-квадрат. При великій кількості
ступенів волі (
N  30
) можна скористатися апроксимуючою формулою
2( 1) 1 1
2
1,(N1)  N  Z   N  , де
Z1 – квантиль стандартного нормального розподілу.
Таким чином, критерій згоди
2

має наступний вид: нехай задані рівень
значимості  та обсяг вибірки n, і значення
( ,..., ) h  h1 hN
вектора частот
( ,..., ) 1 N
v  v v ,
що спостерігалися, задовольняють умовам
n  50,hj  5, j 1,...,N
; тоді якщо значення
статистики
( )
2
t  Xn h
, що спостерігалося, задовольняє нерівності
2
 1 ,(N1)
t  
, то
гіпотезу
H0
відкидають, у противному випадку гіпотеза
H0
не суперечить результатам
експерименту.
2.3. Генератори псевдовипадкових чисел
В рамках даного комп’ютерного практикуму необхідно дослідити наступні дев’ять
генераторів псевдовипадкових чисел та їх модифікацій. Зверніть увагу, що деякі з них є
бітовими, а інші – байтовими.
1) Вбудований генератор псевдовипадкових чисел вашої мови програмування.
Зазвичай (наприклад, в таких мовах, як Pascal та C/C++) для вбудованого датчика
використовується лінійний конгруентний генератор (або генератор Лемера – див. нижче).
Більш молоді мови надають можливість використання складних криптографічних
генераторів (наприклад, мова Java має класи датчиків на основі геш-функції SHA-1).
2) Лінійний конгруентний генератор (генератор Лемера) обчислює послідовність
xn1
 (a  xn  c)modm
для фіксованих значень a, c та m і деякого початкового значення
0
x
. Доведено, що максимальний період такого генератора дорівнює m і досягається він за
виконання таких трьох умов:
– числа m та c повинні бути взаємнопрості;
– число
a 1
повинно ділитись на кожен простий дільник числа m;
– якщо m ділиться на 4, то
a 1
теж повинно ділитись на 4.
Значення
n
x
можуть повертатись безпосередньо або розглядатись як стани, з яких
за допомогою деякого перетворення обчислюються біти (байти) вихідної послідовності.
Пропонується дослідити дві модифікації лінійного конгруентного генератора, LehmerLow
та LehmerHigh, що генерують випадкові байти. Обидві вони обчислюють послідовність
4
невід’ємних 32-бітних чисел
n
x
; значення параметрів дорівнюють
32 m  2 , 2 1
16 a   ,
c 119
, початкове значення
0
x
обирається довільно, але не повинно дорівнювати нулю.
LehmerLow в якості n-того вихідного значення повертає молодші 8 біт числа
n
x ,
LehmerHigh – старші 8 біт
n
x .
3) Генератор псевдовипадкових двійкових послідовностей L20 задається
рекурентною формулою (що описує функціонування лінійного регістра зсуву)
, 20, 21... xt
 xt3  xt5  xt9  xt2 0 t  , де
{0,1} t
x ,  – булеве додавання. Перші 20
елементів послідовності обираються довільним образом, але не всі одночасно рівні нулю.
У даного генератора вихідна послідовність має максимальний можливий період – (2 1)
20

бітів; така послідовність називається М-послідовністю.
4) Генератор псевдовипадкових двійкових послідовностей L89 аналогічний
попередньому генератору за будовою. Він відрізняється визначенням елементів
послідовності за формулою
, 89, 90... xt
 xt38  xt89 t 
, де перші вісімдесят дев'ять
елементів обираються довільним чином, але не всі рівні нулю. Генератор L89 має період
2 1
89
 бітів і також генерує М-послідовність.
5) Генератор Джиффі (Geffe) – потоковий шифр, що генерує шифруючу гаму за
рахунок нелінійної комбінації трьох лінійних регістрів зсуву (властивості даного шифру
досліджувались у комп’ютерному практикумі з дисциплін «Симетрична криптографія» та
«Прикладна криптологія 1»). Шифруюча гама генератора може розглядатись як
псевдовипадкова двійкова послідовність.
Для виконання комп’ютерного практикуму пропонується дослідити генератор
Джиффі, який використовує наступні три лінійні рекурентні послідовності, що
генеруються відповідними лінійними регістрами зсуву:
регістр L11:
11 0 2
x  x  x
;
регістр L9:
9 0 1 3 4
y  y  y  y  y
;
регістр L10:
10 0 3
s  s  s .
Вихідна послідовність бітів
( )i
z
обчислюється за правилом
i i i i i
z  s x (1 s )y .
Початкові заповнення кожного з регістрів генератора Джиффі обираються
довільними, але не нульовими.
6) Генератор Вольфрама – запропонований Еріком Вольфрамом генератор,
пристосований до швидкої апаратної реалізації.
Генератор використовує 32-бітні стани (однак може бути легко перебудований під
будь-яку бітність). Початкове значення
r0  0
обирається довільним чином. Вихідна
послідовність
, , ,... 0 1 2
x x x
обчислюється за таким правилом:
xi
 ri mod 2 ,
( 1) ( ( 1)) ri1
 ri   ri  ri  ,
де операції логічного АБО () та виключного АБО () виконуються окремо над кожним
бітом векторів-операндів, а
i
x
є останнім бітом вектору
i
r .
7) Генератор «Бібліотекар» перетворює у байтову послідовність змістовний текст
довільною мовою (наприклад, випадкові фрагменти творів Мануїла Канта німецькою
5
мовою, що потрясають своєю фундаментальністю, або фанфікі за творами Джоан Кетлін
Роулінг, які у більшості своїй і так є випадковим мотлохом). При реалізації цього
генератору потрібно враховувати, що символи відповідного тексту повинні
представлятись у вигляді байтів (тобто кодування використовує вісім біт на символ).
8) Генератор BM (Блюма-Мікалі) – перший криптографічний генератор,
побудований на основі формальної теорії, яка доводить його властивості. Так, показано,
що можливість вгадувати біти вихідної послідовності цього генератору еквівалентна
можливості розв’язувати задачу дискретного логарифмування.
Нехай p велике просте число, a – примітивний корінь за модулем p (генератор
групи
*
Z p
). Початкове значення стану
T0
, 0  T0  p 1
обирається випадковим чином.
Послідовність станів обчислюється за рекурентним співвідношенням
T a p
Ti
i1
 mod .
Вихідна послідовність бітів
, , ,... 0 1 2
x x x
обчислюється за таким правилом:










2
1
0,
2
1
1,
p
T
p
T
x
i
i
i
.
Байтова модифікація генератору BM в якості вихідного байту
i
x
повертає таке
значення k, що
256
( 1)( 1)
256
( 1)  
 
 k p
T
k p
i
.
Для виконання практикуму пропонується використовувати такі параметри:
p = CEA42B987C44FA642D80AD9F51F10457690DEF10C83D0BC1BCEE12FC3B6093E3;
a = 5B88C41246790891C095E2878880342E88C79974303BD0400B090FE38A688356.
Зауважимо, що для зручності число p обрано у формі
p  2q 1
, де число q також
просте:
q = 675215CC3E227D3216C056CFA8F8822BB486F788641E85E0DE77097E1DB049F1.
9) Генератор BBS (Блюм-Блюма-Шуба) побудовано на ідеях Блюма та Мікалі,
однак для генерування псевдовипадкових бітів він використовує апарат теорії чисел.
Доведено, що можливість вгадувати біти вихідної послідовності цього генератору
еквівалентна можливості розв’язувати задачу факторизації.
Нехай p та q – різні великі прості числа виду
4k  3
і
n  pq
. Початкове значення
r0  2
обирається довільним чином. Вихідна послідовність
, ,... 1 2
x x
обчислюється за таким
правилом:
ri
ri mod n
2
 1
,
xi
 ri mod 2 ,
тобто
i
x
є останнім бітом числа
i
r
(зверніть увагу, що вихідні біти нумеруються з одиниці
– стан
0
r
не використовується для безпосереднього генерування вихідної послідовності).
Байтова модифікація генератору BBS обчислює вихідну послідовність як
xi
 ri mod 256
, тобто повертаються вісім молодших біт числа
i
r .
6
Для виконання практикуму пропонується використовувати такі числа:
p = D5BBB96D30086EC484EBA3D7F9CAEB07;
q = 425D2B9BFDB25B9CF6C416CC6E37B59C1F.
2.4. Критерії і тести для перевірки якості випадкових двійкових
послідовностей
В цьому розділі наведено три критерії, що перевіряють статистичні властивості
псевдовипадкових послідовностей: рівноімовірність знаків, незалежність сусідніх знаків,
однорідність послідовності. Всі ці критерії є критеріями хі-квадрат Пірсона для перевірки
відповідним чином сформульованих гіпотез.
Розглянемо послідовність
Yj, j 1,...,m, де кожна
Yj
є випадковою величиною, що
приймає набір значень із алфавіту А. Всі величини
Yj
мають однаковий розподіл та
розглядаються як вихідні значення деякого генератору.
Послідовність
Yj
задовольняє умові рівноімовірності знаків, якщо кожна
Yj
розподілена рівноімовірно на A. Таким чином, кожне значення із А повинно зустрічатись у
довільній реалізації даної послідовності однакову кількість разів.
Тест на виконання умови рівноімовірності не відрізняється великою чутливістю,
однак він доволі швидкий. В практичних задачах його рекомендується застосовувати в
першу чергу, оскільки якщо послідовність не пройде цей тест, то немає рації
застосовувати до неї інші. Також в якості підсилення можна розглядати умову
рівноімовірності серій знаків, коли рівноімовірними в послідовності повинні бути пари,
трійки, четвірки знаків тощо.
Послідовність
Yj
задовольняє умові незалежності знаків, якщо імовірність
прийняти деяке значення для
Yj
не залежить від того, які значення прийняли
1 2 1
, ,..., Y Y Yj
.
Однак перевірка такої умови зазвичай вкрай важка, тому часто розглядають більш
послаблені вимоги – наприклад, значення
Yj
не повинно залежати від значення
Yj1
(незалежність від попереднього знаку).
Послідовність
Yj
задовольняє умові однорідності, якщо для довільної реалізації
вибірковий розподіл, одержаний на всій послідовності, буде співпадати із вибірковим
розподілом, одержаним на довільній її підпослідовності достатньої довжини; іншими
словами, на довільному фрагменті послідовність веде себе однаково. Зауважимо, що для
виконання умови однорідності не важливо, який саме розподіл будуть мати
Yj
. Зокрема,
цей розподіл не обов’язково повинен бути рівноімовірним.
Перевірка умови однорідності в повному обсязі також доволі складна, тому на
практиці перевіряють більш слабкі форми даної умови – наприклад, розбивають
послідовність на окремі інтервали та перевіряють, чи співпадають вибіркові розподіли на
цих інтервалах.
Сформулюємо критерії Пірсона для кожної з наведених умов. Надалі ми вважаємо,
що послідовність, яка перевіряється, представлена у вигляді байтової послідовності, тобто
область значень кожної випадкової величини
Yj
лежить між 0 і 255. Якщо генератор, який
перевіряється, повертає послідовність бітів, то вихідні значення групуються по вісім біт.
1) Критерій перевірки рівноімовірності знаків
Крок 1. Розглядається байтова послідовність
Yj, j 1,...,m
. Сформулюємо гіпотезу
H0
, що полягає в тому, що всі байти послідовності рівноімовірні.
7
Крок 2. За значеннями послідовності
Yj, j 1,...,m
обчислюється статистика



255
0
2
2
( )
j j
j j
n
v n

, де
j
v – число байтів j, що спостерігається у послідовності,
j n –
очікуване число байтів j у послідовності за умови, що вірна гіпотеза
H0
, тобто в даному
випадку
256
m nj

для всіх j = 0,…...255.
Крок 3. Обчислюється граничне значення
2
1
, що відповідає рівню значимості 
при
l  255 , за формулою:
 l Z  l   1
2
1 2
, де
Z1 – (1)-квантиль стандартного
нормального розподілу.
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить експериментальним даним,
у противному випадку гіпотеза
H0
відкидається.
2) Критерій перевірки незалежності знаків
Крок 1. Байти послідовності послідовність
Yj, j 1,...,m
розглядаються парами
( , ) Y2i1 Y2i
, i 1,..n
, де
  2
m n  – ціла частина
m 2
. Нехай
H0
– гіпотеза, що полягає в тому,
що байти послідовності
Yj, j 1,...,m
незалежні від попереднього значення.
Крок 2. За значеннями послідовності за допомогою формули








  

255
, 0
2
2
1
i j i j
ij
v
v
n


обчислюється значення статистики
2

за умови, що вірна гіпотеза
H0
про незалежність
байтів, де
ij v – кількість появи пари
(i, j)
і


255
i, j 0
vij n , 

255
j 0
i ij v v – кількість появи байта i
на першому місці в парі,


255
i 0
j ij  v – кількість появи байта j на другому місці в парі.
Крок 3. За формулою
 l Z  l   1
2
1 2
визначається граничне значення для
розподілу
2
1
, що відповідає рівню значимості  при
2
l  255 .
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить експериментальним даним, у
противному випадку гіпотеза
H0
відкидається.
3) Критерій перевірки однорідності двійкової послідовності
Критерій перевірки однорідності аналогічний критерію для перевірки
незалежності.
Крок 1. Послідовність
Yj
розбивається на r відрізків довжиною
  r
m
m 

, де m –
загальне число байтів, n  m'
r – загальне число байтів, що використовуються.
Формулюється гіпотеза
H0
про вибір байтів з того самого розподілу.
Крок 2. За значеннями послідовності за допомогою формули








  



255
0
1
0
2
2
1
i
r
j i j
ij
v
v
n


обчислюється значення статистики
2

за умови, що вірна гіпотеза
H0
про вибір з одного
розподілу, де
ij v – кількість появи байта i у відрізку j, 



1
0
r
j
i ij v v , v m
i
j ij
  


255
0

(зауважимо, що
 j
дорівнює довжині j-того відрізка; в нашому тесті всі відрізки мають
однакову довжину, але це не обов’язково).
Крок 3. За формулою
 l Z  l   1
2
1 2
визначається граничне значення для
8
розподілу
2
1
, що відповідає рівню значимості  при
l  255(r 1).
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить дослідним даним, у
противному випадку гіпотеза
H0
відкидається.
Граничні значення
(1) -квантилей
Z1
для стандартного нормального розподілу
обчислюються за таблицями, наведеними у більшості посібників з теорії імовірностей та
математичної статистики.
3. Порядок і рекомендації щодо виконання роботи
1. Написати програми, які реалізують генератори псевдовипадкових бітів,
наведені у розділі 2.3 теоретичних відомостей, а саме:
1) вбудований генератор вашої мови програмування;
2) генератор LehmerLow;
3) генератор LehmerHigh;
4) генератор L20;
5) генератор L89;
6) генератор Джиффі (Geffe);
7) генератор «Бібліотекар»;
8) генератор Вольфрама;
9) генератор Блюма-Мікалі BM;
10) генератор BM_bytes (байтова модифікація генератору Блюма-Мікалі);
11) генератор BBS;
12) генератор BBS_bytes (байтова модифікація генератору BBS).
2. Розробити програми для реалізації трьох тестів перевірки якості двійкових
послідовностей: про рівноімовірність розподілу, про незалежність і про однорідність (див.
розділ 2.4 теоретичних відомостей). Програми повинні враховувати можливості введення
випробовуваної послідовності різної довжини із зазначених датчиків, а також із зовні
заданого файлу, можливості задавати різні значення рівня значимості

(обов’язково:
  0.01; 0.05; 0.1
, інші значення за бажанням).
У програмі повинне бути передбачене відображення на екрані комп'ютера
результатів обробки послідовності, що перевіряється тестами, із зазначенням вхідних
даних послідовності (її довжини, датчиків, що її генерують чи зовнішнього файлу),
обраних значень

, обчислених та теоретичних значень
2

і висновку (у яких випадках
послідовності відкидаються чи приймаються зазначеними критеріями).
3. Провести обробку трьома побудованими тестами прикладів послідовностей,
згенерованих зазначеними датчиками, для значень
  0,01; 0,05; 0,1
. Пам’ятайте, що для
одержання статистично достовірних даних ваша послідовність повинна містити
щонайменше мільйон бітів (краще декілька мільонів).
При багатократному проведенні експериментів ви повинні пам’ятати, що для
одержання нових послідовностей з того чи іншого датчика треба використовувати нові
стартові значення. В промислових реалізаціях для ініціалізації програмних генераторів
псевдовипадкових чисел використовують апаратні датчики, що реалізують фізичні
генератори. В межах даної роботи для ініціалізації можна використовувати інші програмні
датчики або доступну ентропію (системні таймери, траєкторію миші, клавіатурний набір,
ідентифікатори системних подій тощо).
9
4. Оформлення звіту
Звіт до комп’ютерного практикуму оформлюється згідно зі стандартними
правилами оформлення наукових робіт, за такими винятками:
– дозволяється використовувати шрифт Times New Roman 12pt та одинарний
інтервал між рядками;
– для оформлення фрагментів текстів програм дозволяється використовувати
шрифт Courier New 10pt та друкувати тексти в дві колонки;
– дозволяється не починати нові розділи з окремої сторінки.
До звіту можна не включати анотацію, перелік термінів та позначень та перелік
використаних джерел. Також не обов’язково оформлювати зміст.
Звіт має містити:
– мету лабораторної роботи;
– постановку задачі;
– хід роботи, опис труднощів, що виникали, та шляхів їх розв’язання;
– результати дослідження, зокрема, експериментальні результати з перевірки
статистичних гіпотез, подані у вигляді таблиць або діаграм; зокрема, необхідно навести
підсумкову таблицю, в якій навести для кожного досліджуваного генератору, кожного
тесту та кожного рівня значущості теоретичні значення
2

, обчислені за послідовністю
значення
2

та результат проходження відповідного тесту;
– порівняння генераторів, що досліджувались, з точки зору статистичного аналізу
та криптографічного застосування;
– висновки до роботи.
Тексти всіх програм здаються викладачеві в електронному вигляді для перевірки на
плагіат. До захисту комп’ютерного практикуму допускаються студенти, які оформили звіт
та пройшли перевірку програмного коду.
5. Контрольні запитання
1. Що таке статистична гіпотеза? Яка гіпотеза називається простою? Яка
складною?
2. Дайте визначення критерію згоди.
3. Що таке статистика критерію, критична область і рівень значимості?
4. Який розподіл називається альтернативним?
5. Який сенс функції потужності критерію?
6. Які властивості повинна мати криптографічно якісна випадкова послідовність?
7. Що таке рівноімовірність знаків послідовності? Наведіть приклад генератора,
що забезпечує таку властивість.
8. Що таке незалежність знаків послідовності? Наведіть приклад генератора, що
забезпечує таку властивість.
9. Що таке однорідність послідовності? Наведіть приклад генератора, що
забезпечує таку властивість.
10. За яких умов лінійний конгруентний генератор має найбільший період і чому
дорівнює це значення?
11. Який період може бути в лінійної рекурентної послідовності? За яких умов
забезпечується максимально можливий період?
12. Як обчислюється період генератору Джиффі?
13. Покажіть, що якщо аналітик знає числа p та q, що використовуються у
10
генераторі BBS, то за значенням
n
r
та послідовністю бітів
n
x , x ,..., x 1 2
він може знайти
значення
1
r .
14. Поясніть аномальні результати генераторів LehmerLow та Librarian.
Починаючи з якої довжини послідовності будуть одержуватись такі значення статистик?
6. Оцінювання комп’ютерного практикуму
За виконання комп’ютерного практикуму студент може одержати до 16
рейтингових балів; зокрема, оцінюються такі позиції:
– реалізація програм – до шести балів (в залежності від правильності та
швидкодії);
– теоретичний захист роботи – до восьми балів;
– своєчасне виконання практичної частини – 1 бал;
– своєчасний теоретичний захист – 1 бал;
– несвоєчасне виконання роботи – (-1) бал за кожен тиждень пропуску.
Програмний код, створений під час виконання комп’ютерного практикуму,
перевіряється на наявність неправомірних запозичень (плагіату) за допомогою сервісу
Stanford MOSS Antiplagiarism. У разі виявлення в програмному коді неправомірних
запозичень реалізація програм оцінюється у 0 балів, а за виконання практикуму студент
одержує штраф (–10) балів.
Студенти допускаються до теоретичного захисту тільки за умови оформленого
звіту з виконання практикуму та проходження перевірки програмного коду.
А еще можно добавить русский текст It is masterpiece of foreign classic literature
1
АСИМЕТРИЧНІ КРИПТОСИСТЕМИ
ТА ПРОТОКОЛИ
КОМП’ЮТЕРНИЙ ПРАКТИКУМ №1
Побудова тестів для перевірки якості випадкових та
псевдовипадкових послідовностей
1. Мета роботи
Вивчення критеріїв згоди і набуття навичок у побудові та застосуванні тестів для
перевірки статистичних властивостей бінарних випадкових і псевдовипадкових
послідовностей, ознайомлення з поняттям М-послідовності.
2. Основні теоретичні відомості
2.1. Критерії згоди та їх основні характеристики
Статистичною гіпотезою називається будь-яке твердження про вид чи
властивості розподілу випадкових величин, що спостерігаються в експерименті. Звичайно
її називають основною чи нульовою гіпотезою і позначають символом
H0
. Якщо
формулюється тільки одна гіпотеза, то правило, згідно з яким перевіряється,
погоджуються наявні статистичні дані з цією гіпотезою, чи вони її спростовують,
називаються критерієм згоди. Якщо гіпотеза
H0
однозначно фіксує розподіл
спостережень, то її називають простою, у противному випадку – складною. Для побудови
критерію шукають статистику
T(x)
(тобто функцію від випадкових результатів
спостережень), що характеризує відхилення емпіричних даних від гіпотетичних значень у
випадку справедливості гіпотези
H0
.
Припустимо, що така статистика і її розподіл при гіпотезі
H0
знайдені. Нехай
 –
множина, якій належать можливі значення величин, що спостерігаються в експерименті, і
 t :t  T(x), x – множина усіх можливих значень статистики Т; визначимо для
фіксованого заздалегідь достатнього малого числа
  0
підмножину
1  
так, щоб
імовірність здійснення події
T(X)1
у випадку справедливості гіпотези
H0
задовольняла умові
PT(X)1 H0 .
Правило перевірки гіпотези
H0
можна сформулювати в такий спосіб. Нехай х –
реалізація випадкової величини Х, що спостерігалася,
t  T(x) – відповідне значення
статистики Т. Якщо виявиться, що
1
t , то в припущенні справедливості гіпотези
H0
відбулася малоймовірна подія і ця гіпотеза повинна бути відкинута як така, що
суперечить статистичним даним. У противному випадку (тобто якщо
1
t
) немає
підстав відмовлятися від прийнятої гіпотези і варто вважати, що спостереження не
суперечать гіпотезі (чи погоджуються з нею).
В описаній методиці статистику
T
називають статистикою критерію, а
підмножину її значень
1 – критичною областю для гіпотези
H0
. Число  називають
рівнем значимості критерію, і його можна вважати імовірністю помилкового відкидання
2
гіпотези
H0
, коли вона вірна. У конкретних задачах її величину вибирають звичайно
рівною 0,1; 0,05; 0,01 і т.д.
Кожен критерій будується для того, щоб визначити, чи мають місце ті чи інші
відхилення від основної гіпотези. Характер таких відхилень може бути різним, тому треба
мати критерії як універсального типу (такі, що „уловлюють”, будь-які відхилення від
основної гіпотези), так і призначені для виявлення відхилень тільки певного типу.
Будь-який розподіл
FX
 F
спостереженої випадкової величини
X
, що може
виявитися правдивим (тобто допустимим в даній ситуації), але такий, що відрізняється від
гіпотетичного (тобто розподілу при основній гіпотезі Н0), називають альтернативним
розподілом чи альтернативою. Сукупність всіх альтернативних розподілів називають
альтернативною гіпотезою і позначають символом Н1.
Нехай, далі, для гіпотези
H0
, що перевіряється, побудований деякий критерій з
рівнем значимості α, заснований на статистиці Т(X), і нехай
1
- відповідна критична
область. Величину
( ) ( ; ) W F W 1 F
, що являє собою імовірність влучення значення
статистики критерію в критичну область, коли істинним розподілом спостережень є
розподіл F, називають функцією потужності критерію при альтернативі F. У термінах
функції W(F) можна сказати, що критерій тим кращий (тим „потужніший”), чим більше
його потужність при альтернативах. Бажаною властивістю критерію є властивість
незміщеності, що означає, що повинна виконуватися умова
1 W(F) , F H .
Важливим показником кожного критерію є трудомісткість практичної реалізації
відповідного алгоритму. На практиці, коли потрібно швидко одержати відповідь, перевага
нерідко віддається критерію, що просто реалізується, навіть якщо він не є оптимальним у
теоретичному розумінні.
2.2. Критерій згоди хі-квадрат Пірсона для перевірки гіпотези про вид
розподілу
Критерій можна використовувати для будь-яких розподілів, у тому числі і
багатовимірних. Щоб скористатися цим критерієм, вибіркові дані попередньо групують,
тобто переходять до частотного представлення вихідних даних. Нехай
( ,..., ) 1 N
v  v v –
вектор частот влучення вибіркових точок у відповідні інтервали групування
,..., ( ... ) Е1 ЕN
v1   vN
 n
і
( ,..., )
(0) (0)
1
(0)
p  p pN
, де
pj P( j H0
), j 1,....,N
(0)
  Е 
. У цьому
випадку розподіл вектора частот v при гіпотезі
H0
буде поліномінальним з параметрами n
і
(0)
p , і гіпотеза
H0
зводиться до гіпотези про те, що імовірності поліноміального
розподілу побудованого вектора частот v мають задані значення
pj
, j 1,....,N
(0)

. Як
статистику, що характеризує відхилення вибіркових даних (тобто частот
j
v
) від
відповідних гіпотетичних значень (у даному випадку від середніх
(0)
0 E(vj H )  np
),
приймають наступну статистику
X X v v np np v np n
N
j
j j
N
j
n

n
  j  j j
  
 1
2 (0)
1
2 2 (0) 2 0
( ) ( ) ( ) ( ) ,
а критичну область задають у виді
1
 t  t
. Точний умовний (при істинності гіпотези
H0
) розподіл
L( )0
2 Xn H
цієї статистики незручний для обчислення (при заданому рівні
значимості) критичної границі

t
, але для великих обсягів вибірок n статистика
2 Xn
має
3
при гіпотезі
H0
простий граничний розподіл, що не залежить від гіпотези (тобто від чисел
(0)
pj
). Справедливе наступне твердження.
Теорема. Якщо
0 pj 1, j 1,...., N
(0)
   , то при
n 
L( ) ( 1)
2
0
2 Xn H   N  ,
де
( 1)
2
 N  – хі-квадрат розподіл зі
N 1
ступенем волі, що затабульований і
апроксимується за допомогою нормального розподілу при великих
N .
На практиці граничний розподіл
( 1)
2
 N  можна використовувати з добрим
наближенням уже при
n  50
і
vj  5
. При виконанні цих умов відповідно до теореми
критичну границю

t
вибирають рівною
2
1,(N1)
, тобто (
1
)-квантилі розподілу
( 1)
2
 N  . Квантилі знаходяться за таблицями розподілу хі-квадрат. При великій кількості
ступенів волі (
N  30
) можна скористатися апроксимуючою формулою
2( 1) 1 1
2
1,(N1)  N  Z   N  , де
Z1 – квантиль стандартного нормального розподілу.
Таким чином, критерій згоди
2

має наступний вид: нехай задані рівень
значимості  та обсяг вибірки n, і значення
( ,..., ) h  h1 hN
вектора частот
( ,..., ) 1 N
v  v v ,
що спостерігалися, задовольняють умовам
n  50,hj  5, j 1,...,N
; тоді якщо значення
статистики
( )
2
t  Xn h
, що спостерігалося, задовольняє нерівності
2
 1 ,(N1)
t  
, то
гіпотезу
H0
відкидають, у противному випадку гіпотеза
H0
не суперечить результатам
експерименту.
2.3. Генератори псевдовипадкових чисел
В рамках даного комп’ютерного практикуму необхідно дослідити наступні дев’ять
генераторів псевдовипадкових чисел та їх модифікацій. Зверніть увагу, що деякі з них є
бітовими, а інші – байтовими.
1) Вбудований генератор псевдовипадкових чисел вашої мови програмування.
Зазвичай (наприклад, в таких мовах, як Pascal та C/C++) для вбудованого датчика
використовується лінійний конгруентний генератор (або генератор Лемера – див. нижче).
Більш молоді мови надають можливість використання складних криптографічних
генераторів (наприклад, мова Java має класи датчиків на основі геш-функції SHA-1).
2) Лінійний конгруентний генератор (генератор Лемера) обчислює послідовність
xn1
 (a  xn  c)modm
для фіксованих значень a, c та m і деякого початкового значення
0
x
. Доведено, що максимальний період такого генератора дорівнює m і досягається він за
виконання таких трьох умов:
– числа m та c повинні бути взаємнопрості;
– число
a 1
повинно ділитись на кожен простий дільник числа m;
– якщо m ділиться на 4, то
a 1
теж повинно ділитись на 4.
Значення
n
x
можуть повертатись безпосередньо або розглядатись як стани, з яких
за допомогою деякого перетворення обчислюються біти (байти) вихідної послідовності.
Пропонується дослідити дві модифікації лінійного конгруентного генератора, LehmerLow
та LehmerHigh, що генерують випадкові байти. Обидві вони обчислюють послідовність
4
невід’ємних 32-бітних чисел
n
x
; значення параметрів дорівнюють
32 m  2 , 2 1
16 a   ,
c 119
, початкове значення
0
x
обирається довільно, але не повинно дорівнювати нулю.
LehmerLow в якості n-того вихідного значення повертає молодші 8 біт числа
n
x ,
LehmerHigh – старші 8 біт
n
x .
3) Генератор псевдовипадкових двійкових послідовностей L20 задається
рекурентною формулою (що описує функціонування лінійного регістра зсуву)
, 20, 21... xt
 xt3  xt5  xt9  xt2 0 t  , де
{0,1} t
x ,  – булеве додавання. Перші 20
елементів послідовності обираються довільним образом, але не всі одночасно рівні нулю.
У даного генератора вихідна послідовність має максимальний можливий період – (2 1)
20

бітів; така послідовність називається М-послідовністю.
4) Генератор псевдовипадкових двійкових послідовностей L89 аналогічний
попередньому генератору за будовою. Він відрізняється визначенням елементів
послідовності за формулою
, 89, 90... xt
 xt38  xt89 t 
, де перші вісімдесят дев'ять
елементів обираються довільним чином, але не всі рівні нулю. Генератор L89 має період
2 1
89
 бітів і також генерує М-послідовність.
5) Генератор Джиффі (Geffe) – потоковий шифр, що генерує шифруючу гаму за
рахунок нелінійної комбінації трьох лінійних регістрів зсуву (властивості даного шифру
досліджувались у комп’ютерному практикумі з дисциплін «Симетрична криптографія» та
«Прикладна криптологія 1»). Шифруюча гама генератора може розглядатись як
псевдовипадкова двійкова послідовність.
Для виконання комп’ютерного практикуму пропонується дослідити генератор
Джиффі, який використовує наступні три лінійні рекурентні послідовності, що
генеруються відповідними лінійними регістрами зсуву:
регістр L11:
11 0 2
x  x  x
;
регістр L9:
9 0 1 3 4
y  y  y  y  y
;
регістр L10:
10 0 3
s  s  s .
Вихідна послідовність бітів
( )i
z
обчислюється за правилом
i i i i i
z  s x (1 s )y .
Початкові заповнення кожного з регістрів генератора Джиффі обираються
довільними, але не нульовими.
6) Генератор Вольфрама – запропонований Еріком Вольфрамом генератор,
пристосований до швидкої апаратної реалізації.
Генератор використовує 32-бітні стани (однак може бути легко перебудований під
будь-яку бітність). Початкове значення
r0  0
обирається довільним чином. Вихідна
послідовність
, , ,... 0 1 2
x x x
обчислюється за таким правилом:
xi
 ri mod 2 ,
( 1) ( ( 1)) ri1
 ri   ri  ri  ,
де операції логічного АБО () та виключного АБО () виконуються окремо над кожним
бітом векторів-операндів, а
i
x
є останнім бітом вектору
i
r .
7) Генератор «Бібліотекар» перетворює у байтову послідовність змістовний текст
довільною мовою (наприклад, випадкові фрагменти творів Мануїла Канта німецькою
5
мовою, що потрясають своєю фундаментальністю, або фанфікі за творами Джоан Кетлін
Роулінг, які у більшості своїй і так є випадковим мотлохом). При реалізації цього
генератору потрібно враховувати, що символи відповідного тексту повинні
представлятись у вигляді байтів (тобто кодування використовує вісім біт на символ).
8) Генератор BM (Блюма-Мікалі) – перший криптографічний генератор,
побудований на основі формальної теорії, яка доводить його властивості. Так, показано,
що можливість вгадувати біти вихідної послідовності цього генератору еквівалентна
можливості розв’язувати задачу дискретного логарифмування.
Нехай p велике просте число, a – примітивний корінь за модулем p (генератор
групи
*
Z p
). Початкове значення стану
T0
, 0  T0  p 1
обирається випадковим чином.
Послідовність станів обчислюється за рекурентним співвідношенням
T a p
Ti
i1
 mod .
Вихідна послідовність бітів
, , ,... 0 1 2
x x x
обчислюється за таким правилом:










2
1
0,
2
1
1,
p
T
p
T
x
i
i
i
.
Байтова модифікація генератору BM в якості вихідного байту
i
x
повертає таке
значення k, що
256
( 1)( 1)
256
( 1)  
 
 k p
T
k p
i
.
Для виконання практикуму пропонується використовувати такі параметри:
p = CEA42B987C44FA642D80AD9F51F10457690DEF10C83D0BC1BCEE12FC3B6093E3;
a = 5B88C41246790891C095E2878880342E88C79974303BD0400B090FE38A688356.
Зауважимо, що для зручності число p обрано у формі
p  2q 1
, де число q також
просте:
q = 675215CC3E227D3216C056CFA8F8822BB486F788641E85E0DE77097E1DB049F1.
9) Генератор BBS (Блюм-Блюма-Шуба) побудовано на ідеях Блюма та Мікалі,
однак для генерування псевдовипадкових бітів він використовує апарат теорії чисел.
Доведено, що можливість вгадувати біти вихідної послідовності цього генератору
еквівалентна можливості розв’язувати задачу факторизації.
Нехай p та q – різні великі прості числа виду
4k  3
і
n  pq
. Початкове значення
r0  2
обирається довільним чином. Вихідна послідовність
, ,... 1 2
x x
обчислюється за таким
правилом:
ri
ri mod n
2
 1
,
xi
 ri mod 2 ,
тобто
i
x
є останнім бітом числа
i
r
(зверніть увагу, що вихідні біти нумеруються з одиниці
– стан
0
r
не використовується для безпосереднього генерування вихідної послідовності).
Байтова модифікація генератору BBS обчислює вихідну послідовність як
xi
 ri mod 256
, тобто повертаються вісім молодших біт числа
i
r .
6
Для виконання практикуму пропонується використовувати такі числа:
p = D5BBB96D30086EC484EBA3D7F9CAEB07;
q = 425D2B9BFDB25B9CF6C416CC6E37B59C1F.
2.4. Критерії і тести для перевірки якості випадкових двійкових
послідовностей
В цьому розділі наведено три критерії, що перевіряють статистичні властивості
псевдовипадкових послідовностей: рівноімовірність знаків, незалежність сусідніх знаків,
однорідність послідовності. Всі ці критерії є критеріями хі-квадрат Пірсона для перевірки
відповідним чином сформульованих гіпотез.
Розглянемо послідовність
Yj, j 1,...,m, де кожна
Yj
є випадковою величиною, що
приймає набір значень із алфавіту А. Всі величини
Yj
мають однаковий розподіл та
розглядаються як вихідні значення деякого генератору.
Послідовність
Yj
задовольняє умові рівноімовірності знаків, якщо кожна
Yj
розподілена рівноімовірно на A. Таким чином, кожне значення із А повинно зустрічатись у
довільній реалізації даної послідовності однакову кількість разів.
Тест на виконання умови рівноімовірності не відрізняється великою чутливістю,
однак він доволі швидкий. В практичних задачах його рекомендується застосовувати в
першу чергу, оскільки якщо послідовність не пройде цей тест, то немає рації
застосовувати до неї інші. Також в якості підсилення можна розглядати умову
рівноімовірності серій знаків, коли рівноімовірними в послідовності повинні бути пари,
трійки, четвірки знаків тощо.
Послідовність
Yj
задовольняє умові незалежності знаків, якщо імовірність
прийняти деяке значення для
Yj
не залежить від того, які значення прийняли
1 2 1
, ,..., Y Y Yj
.
Однак перевірка такої умови зазвичай вкрай важка, тому часто розглядають більш
послаблені вимоги – наприклад, значення
Yj
не повинно залежати від значення
Yj1
(незалежність від попереднього знаку).
Послідовність
Yj
задовольняє умові однорідності, якщо для довільної реалізації
вибірковий розподіл, одержаний на всій послідовності, буде співпадати із вибірковим
розподілом, одержаним на довільній її підпослідовності достатньої довжини; іншими
словами, на довільному фрагменті послідовність веде себе однаково. Зауважимо, що для
виконання умови однорідності не важливо, який саме розподіл будуть мати
Yj
. Зокрема,
цей розподіл не обов’язково повинен бути рівноімовірним.
Перевірка умови однорідності в повному обсязі також доволі складна, тому на
практиці перевіряють більш слабкі форми даної умови – наприклад, розбивають
послідовність на окремі інтервали та перевіряють, чи співпадають вибіркові розподіли на
цих інтервалах.
Сформулюємо критерії Пірсона для кожної з наведених умов. Надалі ми вважаємо,
що послідовність, яка перевіряється, представлена у вигляді байтової послідовності, тобто
область значень кожної випадкової величини
Yj
лежить між 0 і 255. Якщо генератор, який
перевіряється, повертає послідовність бітів, то вихідні значення групуються по вісім біт.
1) Критерій перевірки рівноімовірності знаків
Крок 1. Розглядається байтова послідовність
Yj, j 1,...,m
. Сформулюємо гіпотезу
H0
, що полягає в тому, що всі байти послідовності рівноімовірні.
7
Крок 2. За значеннями послідовності
Yj, j 1,...,m
обчислюється статистика



255
0
2
2
( )
j j
j j
n
v n

, де
j
v – число байтів j, що спостерігається у послідовності,
j n –
очікуване число байтів j у послідовності за умови, що вірна гіпотеза
H0
, тобто в даному
випадку
256
m nj

для всіх j = 0,…...255.
Крок 3. Обчислюється граничне значення
2
1
, що відповідає рівню значимості 
при
l  255 , за формулою:
 l Z  l   1
2
1 2
, де
Z1 – (1)-квантиль стандартного
нормального розподілу.
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить експериментальним даним,
у противному випадку гіпотеза
H0
відкидається.
2) Критерій перевірки незалежності знаків
Крок 1. Байти послідовності послідовність
Yj, j 1,...,m
розглядаються парами
( , ) Y2i1 Y2i
, i 1,..n
, де
  2
m n  – ціла частина
m 2
. Нехай
H0
– гіпотеза, що полягає в тому,
що байти послідовності
Yj, j 1,...,m
незалежні від попереднього значення.
Крок 2. За значеннями послідовності за допомогою формули








  

255
, 0
2
2
1
i j i j
ij
v
v
n


обчислюється значення статистики
2

за умови, що вірна гіпотеза
H0
про незалежність
байтів, де
ij v – кількість появи пари
(i, j)
і


255
i, j 0
vij n , 

255
j 0
i ij v v – кількість появи байта i
на першому місці в парі,


255
i 0
j ij  v – кількість появи байта j на другому місці в парі.
Крок 3. За формулою
 l Z  l   1
2
1 2
визначається граничне значення для
розподілу
2
1
, що відповідає рівню значимості  при
2
l  255 .
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить експериментальним даним, у
противному випадку гіпотеза
H0
відкидається.
3) Критерій перевірки однорідності двійкової послідовності
Критерій перевірки однорідності аналогічний критерію для перевірки
незалежності.
Крок 1. Послідовність
Yj
розбивається на r відрізків довжиною
  r
m
m 

, де m –
загальне число байтів, n  m'
r – загальне число байтів, що використовуються.
Формулюється гіпотеза
H0
про вибір байтів з того самого розподілу.
Крок 2. За значеннями послідовності за допомогою формули








  



255
0
1
0
2
2
1
i
r
j i j
ij
v
v
n


обчислюється значення статистики
2

за умови, що вірна гіпотеза
H0
про вибір з одного
розподілу, де
ij v – кількість появи байта i у відрізку j, 



1
0
r
j
i ij v v , v m
i
j ij
  


255
0

(зауважимо, що
 j
дорівнює довжині j-того відрізка; в нашому тесті всі відрізки мають
однакову довжину, але це не обов’язково).
Крок 3. За формулою
 l Z  l   1
2
1 2
визначається граничне значення для
8
розподілу
2
1
, що відповідає рівню значимості  при
l  255(r 1).
Крок 4. Якщо
2
1
2
   
, то гіпотеза
H0
не суперечить дослідним даним, у
противному випадку гіпотеза
H0
відкидається.
Граничні значення
(1) -квантилей
Z1
для стандартного нормального розподілу
обчислюються за таблицями, наведеними у більшості посібників з теорії імовірностей та
математичної статистики.
3. Порядок і рекомендації щодо виконання роботи
1. Написати програми, які реалізують генератори псевдовипадкових бітів,
наведені у розділі 2.3 теоретичних відомостей, а саме:
1) вбудований генератор вашої мови програмування;
2) генератор LehmerLow;
3) генератор LehmerHigh;
4) генератор L20;
5) генератор L89;
6) генератор Джиффі (Geffe);
7) генератор «Бібліотекар»;
8) генератор Вольфрама;
9) генератор Блюма-Мікалі BM;
10) генератор BM_bytes (байтова модифікація генератору Блюма-Мікалі);
11) генератор BBS;
12) генератор BBS_bytes (байтова модифікація генератору BBS).
2. Розробити програми для реалізації трьох тестів перевірки якості двійкових
послідовностей: про рівноімовірність розподілу, про незалежність і про однорідність (див.
розділ 2.4 теоретичних відомостей). Програми повинні враховувати можливості введення
випробовуваної послідовності різної довжини із зазначених датчиків, а також із зовні
заданого файлу, можливості задавати різні значення рівня значимості

(обов’язково:
  0.01; 0.05; 0.1
, інші значення за бажанням).
У програмі повинне бути передбачене відображення на екрані комп'ютера
результатів обробки послідовності, що перевіряється тестами, із зазначенням вхідних
даних послідовності (її довжини, датчиків, що її генерують чи зовнішнього файлу),
обраних значень

, обчислених та теоретичних значень
2

і висновку (у яких випадках
послідовності відкидаються чи приймаються зазначеними критеріями).
3. Провести обробку трьома побудованими тестами прикладів послідовностей,
згенерованих зазначеними датчиками, для значень
  0,01; 0,05; 0,1
. Пам’ятайте, що для
одержання статистично достовірних даних ваша послідовність повинна містити
щонайменше мільйон бітів (краще декілька мільонів).
При багатократному проведенні експериментів ви повинні пам’ятати, що для
одержання нових послідовностей з того чи іншого датчика треба використовувати нові
стартові значення. В промислових реалізаціях для ініціалізації програмних генераторів
псевдовипадкових чисел використовують апаратні датчики, що реалізують фізичні
генератори. В межах даної роботи для ініціалізації можна використовувати інші програмні
датчики або доступну ентропію (системні таймери, траєкторію миші, клавіатурний набір,
ідентифікатори системних подій тощо).
9
4. Оформлення звіту
Звіт до комп’ютерного практикуму оформлюється згідно зі стандартними
правилами оформлення наукових робіт, за такими винятками:
– дозволяється використовувати шрифт Times New Roman 12pt та одинарний
інтервал між рядками;
– для оформлення фрагментів текстів програм дозволяється використовувати
шрифт Courier New 10pt та друкувати тексти в дві колонки;
– дозволяється не починати нові розділи з окремої сторінки.
До звіту можна не включати анотацію, перелік термінів та позначень та перелік
використаних джерел. Також не обов’язково оформлювати зміст.
Звіт має містити:
– мету лабораторної роботи;
– постановку задачі;
– хід роботи, опис труднощів, що виникали, та шляхів їх розв’язання;
– результати дослідження, зокрема, експериментальні результати з перевірки
статистичних гіпотез, подані у вигляді таблиць або діаграм; зокрема, необхідно навести
підсумкову таблицю, в якій навести для кожного досліджуваного генератору, кожного
тесту та кожного рівня значущості теоретичні значення
2

, обчислені за послідовністю
значення
2

та результат проходження відповідного тесту;
– порівняння генераторів, що досліджувались, з точки зору статистичного аналізу
та криптографічного застосування;
– висновки до роботи.
Тексти всіх програм здаються викладачеві в електронному вигляді для перевірки на
плагіат. До захисту комп’ютерного практикуму допускаються студенти, які оформили звіт
та пройшли перевірку програмного коду.
5. Контрольні запитання
1. Що таке статистична гіпотеза? Яка гіпотеза називається простою? Яка
складною?
2. Дайте визначення критерію згоди.
3. Що таке статистика критерію, критична область і рівень значимості?
4. Який розподіл називається альтернативним?
5. Який сенс функції потужності критерію?
6. Які властивості повинна мати криптографічно якісна випадкова послідовність?
7. Що таке рівноімовірність знаків послідовності? Наведіть приклад генератора,
що забезпечує таку властивість.
8. Що таке незалежність знаків послідовності? Наведіть приклад генератора, що
забезпечує таку властивість.
9. Що таке однорідність послідовності? Наведіть приклад генератора, що
забезпечує таку властивість.
10. За яких умов лінійний конгруентний генератор має найбільший період і чому
дорівнює це значення?
11. Який період може бути в лінійної рекурентної послідовності? За яких умов
забезпечується максимально можливий період?
12. Як обчислюється період генератору Джиффі?
13. Покажіть, що якщо аналітик знає числа p та q, що використовуються у
10
генераторі BBS, то за значенням
n
r
та послідовністю бітів
n
x , x ,..., x 1 2
він може знайти
значення
1
r .
14. Поясніть аномальні результати генераторів LehmerLow та Librarian.
Починаючи з якої довжини послідовності будуть одержуватись такі значення статистик?
6. Оцінювання комп’ютерного практикуму
За виконання комп’ютерного практикуму студент може одержати до 16
рейтингових балів; зокрема, оцінюються такі позиції:
– реалізація програм – до шести балів (в залежності від правильності та
швидкодії);
– теоретичний захист роботи – до восьми балів;
– своєчасне виконання практичної частини – 1 бал;
– своєчасний теоретичний захист – 1 бал;
– несвоєчасне виконання роботи – (-1) бал за кожен тиждень пропуску.
Програмний код, створений під час виконання комп’ютерного практикуму,
перевіряється на наявність неправомірних запозичень (плагіату) за допомогою сервісу
Stanford MOSS Antiplagiarism. У разі виявлення в програмному коді неправомірних
запозичень реалізація програм оцінюється у 0 балів, а за виконання практикуму студент
одержує штраф (–10) балів.
Студенти допускаються до теоретичного захисту тільки за умови оформленого
звіту з виконання практикуму та проходження перевірки програмного коду.